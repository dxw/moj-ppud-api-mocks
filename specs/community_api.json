{
   "basePath" : "/",
   "definitions" : {
      "AccessLimitation" : {
         "properties" : {
            "exclusionMessage" : {
               "type" : "string"
            },
            "restrictionMessage" : {
               "type" : "string"
            },
            "userExcluded" : {
               "type" : "boolean"
            },
            "userRestricted" : {
               "type" : "boolean"
            }
         },
         "required" : [
            "userExcluded",
            "userRestricted"
         ],
         "title" : "AccessLimitation",
         "type" : "object"
      },
      "AdditionalIdentifier" : {
         "description" : "Additional Identifier. \nCurrent active values for the type are\n LIFN\tLifer Number\nOTHR\tOther Personal Identifier\nSPNC\tScottish/Old PNC Number\nNPNC\tVerified No PNC Date\nVISO\tViSOR Number\nPCRN\tOther Previous CRN\nIMMN\tImmigration Number\nYCRN\tYOT Identifier/CRN\nAPNC\tAdditional PNC\nURN\tCPS Unique Reference Number\nAI02\tPrevious Prison Number\nDOFF\tDuplicate Offender CRN\nNINO\tNational Insurance Number\nDNOMS\tDuplicate NOMIS Number\nFull list can be found calling \"/secure/referenceData/set/ADDITIONAL IDENTIFIER TYPE\"",
         "properties" : {
            "additionalIdentifierId" : {
               "description" : "unique id of identifier",
               "example" : 23456789,
               "format" : "int64",
               "type" : "integer"
            },
            "type" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "identifier name and description"
            },
            "value" : {
               "description" : "value of identifier",
               "example" : "X1234",
               "type" : "string"
            }
         },
         "title" : "AdditionalIdentifier",
         "type" : "object"
      },
      "Address" : {
         "properties" : {
            "addressNumber" : {
               "type" : "string"
            },
            "buildingName" : {
               "type" : "string"
            },
            "county" : {
               "type" : "string"
            },
            "district" : {
               "type" : "string"
            },
            "from" : {
               "format" : "date",
               "type" : "string"
            },
            "noFixedAbode" : {
               "type" : "boolean"
            },
            "notes" : {
               "type" : "string"
            },
            "postcode" : {
               "type" : "string"
            },
            "status" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "streetName" : {
               "type" : "string"
            },
            "telephoneNumber" : {
               "type" : "string"
            },
            "to" : {
               "format" : "date",
               "type" : "string"
            },
            "town" : {
               "type" : "string"
            }
         },
         "required" : [
            "from"
         ],
         "title" : "Address",
         "type" : "object"
      },
      "AllTeam" : {
         "properties" : {
            "borough" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "code" : {
               "type" : "string"
            },
            "description" : {
               "type" : "string"
            },
            "district" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "externalProvider" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "isPrivate" : {
               "type" : "boolean"
            },
            "localDeliveryUnit" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "name" : {
               "type" : "string"
            },
            "providerTeamId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "scProvider" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "teamId" : {
               "format" : "int64",
               "type" : "integer"
            }
         },
         "required" : [
            "providerTeamId",
            "teamId"
         ],
         "title" : "AllTeam",
         "type" : "object"
      },
      "Appointment" : {
         "properties" : {
            "alertActive" : {
               "type" : "boolean"
            },
            "appointmentDate" : {
               "format" : "date",
               "type" : "string"
            },
            "appointmentEndTime" : {
               "$ref" : "#/definitions/LocalTime"
            },
            "appointmentId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "appointmentOutcomeType" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "appointmentStartTime" : {
               "$ref" : "#/definitions/LocalTime"
            },
            "appointmentType" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "attended" : {
               "enum" : [
                  "ATTENDED",
                  "UNATTENDED",
                  "NOT_RECORDED"
               ],
               "type" : "string"
            },
            "complied" : {
               "type" : "boolean"
            },
            "createdDateTime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "documentLinked" : {
               "type" : "boolean"
            },
            "eventId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "explanation" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "hoursCredited" : {
               "format" : "double",
               "type" : "number"
            },
            "lastUpdatedDateTime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "licenceCondition" : {
               "$ref" : "#/definitions/LicenceCondition"
            },
            "linkedContactId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "notes" : {
               "type" : "string"
            },
            "nsi" : {
               "$ref" : "#/definitions/Nsi"
            },
            "officeLocation" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "probationArea" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "providerEmployee" : {
               "$ref" : "#/definitions/Human"
            },
            "providerLocation" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "providerTeam" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "requirement" : {
               "$ref" : "#/definitions/Requirement"
            },
            "staff" : {
               "$ref" : "#/definitions/Human"
            },
            "team" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "uploadLinked" : {
               "type" : "boolean"
            },
            "visorContact" : {
               "type" : "boolean"
            }
         },
         "required" : [
            "appointmentId",
            "appointmentType"
         ],
         "title" : "Appointment",
         "type" : "object"
      },
      "Appointments" : {
         "properties" : {
            "acceptableAbsences" : {
               "description" : "Number of appointments recorded to date as not attended and compliant - i.e. with an acceptable reason for absence",
               "format" : "int64",
               "type" : "integer"
            },
            "attended" : {
               "description" : "Number of appointments recorded to date as attended",
               "format" : "int64",
               "type" : "integer"
            },
            "noOutcomeRecorded" : {
               "description" : "Number of appointments to date where no attendance or compliance information has been recorded",
               "format" : "int64",
               "type" : "integer"
            },
            "total" : {
               "description" : "Total number of appointments to date",
               "format" : "int64",
               "type" : "integer"
            },
            "unacceptableAbsences" : {
               "description" : "Number of appointments recorded to date as not attended and uncompliant - i.e. without an acceptable reason for absence",
               "format" : "int64",
               "type" : "integer"
            }
         },
         "title" : "Appointments",
         "type" : "object"
      },
      "Attendance" : {
         "properties" : {
            "attendanceDate" : {
               "format" : "date",
               "type" : "string"
            },
            "attended" : {
               "type" : "boolean"
            },
            "complied" : {
               "type" : "boolean"
            },
            "contactId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "contactType" : {
               "$ref" : "#/definitions/ContactTypeDetail"
            },
            "outcome" : {
               "type" : "string"
            }
         },
         "required" : [
            "attendanceDate",
            "attended",
            "complied",
            "contactId"
         ],
         "title" : "Attendance",
         "type" : "object"
      },
      "Attendances" : {
         "description" : "Attendance Wrapper",
         "properties" : {
            "attendances" : {
               "description" : "List of Attendances",
               "items" : {
                  "$ref" : "#/definitions/Attendance"
               },
               "type" : "array"
            }
         },
         "title" : "Attendances",
         "type" : "object"
      },
      "AuthPassword" : {
         "description" : "Password Credentials",
         "properties" : {
            "password" : {
               "description" : "LDAP password",
               "example" : "password123456",
               "type" : "string"
            }
         },
         "required" : [
            "password"
         ],
         "title" : "AuthPassword",
         "type" : "object"
      },
      "AuthUser" : {
         "description" : "Authentication Details",
         "properties" : {
            "password" : {
               "description" : "LDAP password",
               "example" : "password123456",
               "type" : "string"
            },
            "username" : {
               "description" : "LDAP username",
               "example" : "TEST_USER_NPS",
               "type" : "string"
            }
         },
         "required" : [
            "password",
            "username"
         ],
         "title" : "AuthUser",
         "type" : "object"
      },
      "CommunityOrPrisonOffenderManager" : {
         "properties" : {
            "fromDate" : {
               "description" : "Date since the offender manager was assigned",
               "example" : "2019-12-04",
               "format" : "date",
               "type" : "string"
            },
            "isPrisonOffenderManager" : {
               "description" : "True if this offender manager is the prison OM else False",
               "example" : true,
               "type" : "boolean"
            },
            "isResponsibleOfficer" : {
               "description" : "True if this offender manager is the current responsible officer",
               "example" : true,
               "type" : "boolean"
            },
            "isUnallocated" : {
               "description" : "True if no real offender manager has been allocated and this is just a placeholder",
               "example" : true,
               "type" : "boolean"
            },
            "probationArea" : {
               "$ref" : "#/definitions/ProbationArea",
               "description" : "Probation area / prison institution for this OM"
            },
            "staff" : {
               "$ref" : "#/definitions/Human",
               "description" : "staff name details"
            },
            "staffCode" : {
               "description" : "Staff code",
               "example" : "CHSE755",
               "type" : "string"
            },
            "team" : {
               "$ref" : "#/definitions/Team",
               "description" : "Team details for this offender manager"
            }
         },
         "title" : "CommunityOrPrisonOffenderManager",
         "type" : "object"
      },
      "Contact" : {
         "properties" : {
            "alertActive" : {
               "type" : "boolean"
            },
            "attended" : {
               "type" : "boolean"
            },
            "complied" : {
               "type" : "boolean"
            },
            "contactEndTime" : {
               "$ref" : "#/definitions/LocalTime"
            },
            "contactId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "contactOutcomeType" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "contactStartTime" : {
               "$ref" : "#/definitions/LocalTime"
            },
            "contactType" : {
               "$ref" : "#/definitions/ContactType"
            },
            "createdDateTime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "documentLinked" : {
               "type" : "boolean"
            },
            "eventId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "explanation" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "hoursCredited" : {
               "format" : "double",
               "type" : "number"
            },
            "lastUpdatedDateTime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "licenceCondition" : {
               "$ref" : "#/definitions/LicenceCondition"
            },
            "linkedContactId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "notes" : {
               "type" : "string"
            },
            "nsi" : {
               "$ref" : "#/definitions/Nsi"
            },
            "partitionArea" : {
               "type" : "string"
            },
            "probationArea" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "providerEmployee" : {
               "$ref" : "#/definitions/Human"
            },
            "providerLocation" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "providerTeam" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "requirement" : {
               "$ref" : "#/definitions/Requirement"
            },
            "softDeleted" : {
               "type" : "boolean"
            },
            "staff" : {
               "$ref" : "#/definitions/Human"
            },
            "team" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "uploadLinked" : {
               "type" : "boolean"
            },
            "visorContact" : {
               "type" : "boolean"
            }
         },
         "required" : [
            "contactId",
            "contactType"
         ],
         "title" : "Contact",
         "type" : "object"
      },
      "ContactDetails" : {
         "properties" : {
            "addresses" : {
               "items" : {
                  "$ref" : "#/definitions/Address"
               },
               "type" : "array"
            },
            "allowSMS" : {
               "type" : "boolean"
            },
            "emailAddresses" : {
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            },
            "phoneNumbers" : {
               "items" : {
                  "$ref" : "#/definitions/PhoneNumber"
               },
               "type" : "array"
            }
         },
         "title" : "ContactDetails",
         "type" : "object"
      },
      "ContactDetailsSummary" : {
         "properties" : {
            "allowSMS" : {
               "type" : "boolean"
            },
            "emailAddresses" : {
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            },
            "phoneNumbers" : {
               "items" : {
                  "$ref" : "#/definitions/PhoneNumber"
               },
               "type" : "array"
            }
         },
         "title" : "ContactDetailsSummary",
         "type" : "object"
      },
      "ContactType" : {
         "properties" : {
            "code" : {
               "type" : "string"
            },
            "description" : {
               "type" : "string"
            },
            "shortDescription" : {
               "type" : "string"
            }
         },
         "required" : [
            "code",
            "description"
         ],
         "title" : "ContactType",
         "type" : "object"
      },
      "ContactTypeDetail" : {
         "properties" : {
            "code" : {
               "type" : "string"
            },
            "description" : {
               "type" : "string"
            }
         },
         "required" : [
            "code",
            "description"
         ],
         "title" : "ContactTypeDetail",
         "type" : "object"
      },
      "Conviction" : {
         "properties" : {
            "active" : {
               "type" : "boolean"
            },
            "convictionDate" : {
               "format" : "date",
               "type" : "string"
            },
            "convictionId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "custody" : {
               "$ref" : "#/definitions/Custody"
            },
            "inBreach" : {
               "type" : "boolean"
            },
            "index" : {
               "type" : "string"
            },
            "latestCourtAppearanceOutcome" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "offences" : {
               "items" : {
                  "$ref" : "#/definitions/Offence"
               },
               "type" : "array"
            },
            "referralDate" : {
               "format" : "date",
               "type" : "string"
            },
            "sentence" : {
               "$ref" : "#/definitions/Sentence"
            }
         },
         "title" : "Conviction",
         "type" : "object"
      },
      "ConvictionDocuments" : {
         "properties" : {
            "convictionId" : {
               "type" : "string"
            },
            "documents" : {
               "items" : {
                  "$ref" : "#/definitions/OffenderDocumentDetail"
               },
               "type" : "array"
            }
         },
         "title" : "ConvictionDocuments",
         "type" : "object"
      },
      "ConvictionRequirements" : {
         "properties" : {
            "requirements" : {
               "description" : "List of requirements associated with this conviction",
               "items" : {
                  "$ref" : "#/definitions/Requirement"
               },
               "type" : "array"
            }
         },
         "title" : "ConvictionRequirements",
         "type" : "object"
      },
      "Count" : {
         "properties" : {
            "value" : {
               "format" : "int64",
               "type" : "integer"
            }
         },
         "title" : "Count",
         "type" : "object"
      },
      "Court" : {
         "properties" : {
            "buildingName" : {
               "type" : "string"
            },
            "code" : {
               "type" : "string"
            },
            "country" : {
               "type" : "string"
            },
            "county" : {
               "type" : "string"
            },
            "courtId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "courtName" : {
               "type" : "string"
            },
            "courtTypeId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "createdDatetime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "fax" : {
               "type" : "string"
            },
            "lastUpdatedDatetime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "locality" : {
               "type" : "string"
            },
            "postcode" : {
               "type" : "string"
            },
            "probationAreaId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "secureEmailAddress" : {
               "type" : "string"
            },
            "selectable" : {
               "type" : "boolean"
            },
            "street" : {
               "type" : "string"
            },
            "telephoneNumber" : {
               "type" : "string"
            },
            "town" : {
               "type" : "string"
            }
         },
         "title" : "Court",
         "type" : "object"
      },
      "CourtAppearance" : {
         "properties" : {
            "appearanceDate" : {
               "format" : "date-time",
               "type" : "string"
            },
            "appearanceTypeId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "bailConditions" : {
               "type" : "string"
            },
            "court" : {
               "$ref" : "#/definitions/Court"
            },
            "courtAppearanceId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "courtNotes" : {
               "type" : "string"
            },
            "courtReports" : {
               "items" : {
                  "$ref" : "#/definitions/CourtReport"
               },
               "type" : "array"
            },
            "createdDatetime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "crownCourtCalendarNumber" : {
               "type" : "string"
            },
            "eventId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "lastUpdatedDatetime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "offenceIds" : {
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            },
            "offenderId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "outcome" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "pleaId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "remandStatusId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "staffId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "teamId" : {
               "format" : "int64",
               "type" : "integer"
            }
         },
         "title" : "CourtAppearance",
         "type" : "object"
      },
      "CourtReport" : {
         "properties" : {
            "allocationDate" : {
               "format" : "date-time",
               "type" : "string"
            },
            "completedDate" : {
               "format" : "date-time",
               "type" : "string"
            },
            "courtReportId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "courtReportTypeId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "createdDatetime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "dateRequested" : {
               "format" : "date-time",
               "type" : "string"
            },
            "dateRequired" : {
               "format" : "date-time",
               "type" : "string"
            },
            "deliveredCourtReportTypeId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "deliveredReportReasonId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "lastUpdatedDatetime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "levelOfSeriousnessId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "notes" : {
               "type" : "string"
            },
            "offenderId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "pendingTransfer" : {
               "type" : "boolean"
            },
            "publicProtection" : {
               "type" : "boolean"
            },
            "punishment" : {
               "type" : "boolean"
            },
            "receivedByCourtDate" : {
               "format" : "date-time",
               "type" : "string"
            },
            "recommendationsNotStated" : {
               "type" : "boolean"
            },
            "reductionOfCrime" : {
               "type" : "boolean"
            },
            "reformAndRehabilitation" : {
               "type" : "boolean"
            },
            "reparation" : {
               "type" : "boolean"
            },
            "requiredByCourt" : {
               "$ref" : "#/definitions/Court"
            },
            "section178" : {
               "type" : "boolean"
            },
            "sentToCourtDate" : {
               "format" : "date-time",
               "type" : "string"
            },
            "videoLink" : {
               "type" : "string"
            }
         },
         "title" : "CourtReport",
         "type" : "object"
      },
      "CreateCustodyKeyDate" : {
         "properties" : {
            "date" : {
               "format" : "date",
               "type" : "string"
            }
         },
         "title" : "CreateCustodyKeyDate",
         "type" : "object"
      },
      "CreatePrisonOffenderManager" : {
         "description" : "Request body for assigning an offender manager to an offender. Must pass exactly one of officer / officerCode (not both)",
         "properties" : {
            "nomsPrisonInstitutionCode" : {
               "description" : "Prison institution code in NOMIS",
               "example" : "MDI",
               "type" : "string"
            },
            "officer" : {
               "$ref" : "#/definitions/Human",
               "description" : "Name of offender manager. If passed then must contain both forename(s) and surname",
               "example" : "officer: {\"forenames\": \"John\", \"surname\": \"Smith\" }"
            },
            "officerCode" : {
               "description" : "Officer staff code. If not present officer will be used to lookup staff member",
               "example" : "N07A001",
               "type" : "string"
            }
         },
         "required" : [
            "nomsPrisonInstitutionCode"
         ],
         "title" : "CreatePrisonOffenderManager",
         "type" : "object"
      },
      "Custody" : {
         "properties" : {
            "bookingNumber" : {
               "description" : "Human readable id of the prison booking, AKA book number",
               "example" : "V74111",
               "type" : "string"
            },
            "institution" : {
               "$ref" : "#/definitions/Institution",
               "description" : "Institution where the offender currently resides"
            },
            "keyDates" : {
               "$ref" : "#/definitions/CustodyRelatedKeyDates",
               "description" : "Key sentence dates of particular interest to custody"
            }
         },
         "title" : "Custody",
         "type" : "object"
      },
      "CustodyKeyDate" : {
         "properties" : {
            "date" : {
               "format" : "date",
               "type" : "string"
            },
            "type" : {
               "$ref" : "#/definitions/KeyValue"
            }
         },
         "title" : "CustodyKeyDate",
         "type" : "object"
      },
      "CustodyRelatedKeyDates" : {
         "description" : "Key sentence dates that are related to their time in custody",
         "properties" : {
            "conditionalReleaseDate" : {
               "description" : "Conditional release date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "expectedPrisonOffenderManagerHandoverDate" : {
               "description" : "Expected actual handover date from prison offender manager to community offender manager",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "expectedPrisonOffenderManagerHandoverStartDate" : {
               "description" : "Expected start date of the handover process from prison offender manager to community offender manager",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "expectedReleaseDate" : {
               "description" : "Expected release date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "hdcEligibilityDate" : {
               "description" : "Home detention curfew eligibility date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "licenceExpiryDate" : {
               "description" : "Licence expiry date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "paroleEligibilityDate" : {
               "description" : "Parole eligibility date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "postSentenceSupervisionEndDate" : {
               "description" : "Post sentence Supervision end date. AKA Top-up supervision end date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "sentenceExpiryDate" : {
               "description" : "Sentence expiry date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            }
         },
         "title" : "CustodyRelatedKeyDates",
         "type" : "object"
      },
      "Disability" : {
         "properties" : {
            "disabilityId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "disabilityType" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "endDate" : {
               "format" : "date",
               "type" : "string"
            },
            "notes" : {
               "type" : "string"
            },
            "startDate" : {
               "format" : "date",
               "type" : "string"
            }
         },
         "title" : "Disability",
         "type" : "object"
      },
      "DocumentLink" : {
         "properties" : {
            "alfrescoId" : {
               "type" : "string"
            },
            "alfrescoUser" : {
               "type" : "string"
            },
            "crn" : {
               "type" : "string"
            },
            "documentName" : {
               "type" : "string"
            },
            "entityId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "probationAreaCode" : {
               "type" : "string"
            },
            "tableName" : {
               "type" : "string"
            }
         },
         "title" : "DocumentLink",
         "type" : "object"
      },
      "DocumentMeta" : {
         "properties" : {
            "author" : {
               "type" : "string"
            },
            "createdAt" : {
               "format" : "date-time",
               "type" : "string"
            },
            "docType" : {
               "type" : "string"
            },
            "documentName" : {
               "type" : "string"
            },
            "entityType" : {
               "type" : "string"
            },
            "id" : {
               "type" : "string"
            },
            "lastModifiedAt" : {
               "format" : "date-time",
               "type" : "string"
            },
            "userData" : {
               "$ref" : "#/definitions/ObjectNode"
            }
         },
         "title" : "DocumentMeta",
         "type" : "object"
      },
      "ErrorResponse" : {
         "properties" : {
            "developerMessage" : {
               "description" : "Developer Information message",
               "example" : "System is down",
               "type" : "string"
            },
            "errorCode" : {
               "description" : "Internal Error Code",
               "example" : 20012,
               "format" : "int32",
               "type" : "integer"
            },
            "moreInfo" : {
               "description" : "Additional information about the error",
               "example" : "Hard disk failure",
               "type" : "string"
            },
            "status" : {
               "description" : "Status of Error Code",
               "example" : 400,
               "format" : "int32",
               "type" : "integer"
            },
            "userMessage" : {
               "description" : "Error message information",
               "example" : "Offender Not Found",
               "type" : "string"
            }
         },
         "required" : [
            "errorCode",
            "status",
            "userMessage"
         ],
         "title" : "ErrorResponse",
         "type" : "object"
      },
      "File" : {
         "properties" : {
            "absolute" : {
               "type" : "boolean"
            },
            "absoluteFile" : {
               "$ref" : "#/definitions/File"
            },
            "absolutePath" : {
               "type" : "string"
            },
            "canonicalFile" : {
               "$ref" : "#/definitions/File"
            },
            "canonicalPath" : {
               "type" : "string"
            },
            "directory" : {
               "type" : "boolean"
            },
            "file" : {
               "type" : "boolean"
            },
            "freeSpace" : {
               "format" : "int64",
               "type" : "integer"
            },
            "hidden" : {
               "type" : "boolean"
            },
            "name" : {
               "type" : "string"
            },
            "parent" : {
               "type" : "string"
            },
            "parentFile" : {
               "$ref" : "#/definitions/File"
            },
            "path" : {
               "type" : "string"
            },
            "totalSpace" : {
               "format" : "int64",
               "type" : "integer"
            },
            "usableSpace" : {
               "format" : "int64",
               "type" : "integer"
            }
         },
         "title" : "File",
         "type" : "object"
      },
      "Human" : {
         "properties" : {
            "forenames" : {
               "description" : "Given names",
               "example" : "Sheila Linda",
               "type" : "string"
            },
            "surname" : {
               "description" : "Family name",
               "example" : "Hancock",
               "type" : "string"
            }
         },
         "title" : "Human",
         "type" : "object"
      },
      "IDs" : {
         "properties" : {
            "crn" : {
               "description" : "case reference number",
               "example" : "12345C",
               "type" : "string"
            },
            "croNumber" : {
               "description" : "Number from the crime records office",
               "example" : "123456/04A",
               "type" : "string"
            },
            "immigrationNumber" : {
               "description" : "Immigration number",
               "example" : "A1234567",
               "type" : "string"
            },
            "mostRecentPrisonerNumber" : {
               "description" : "Book number of latest booking from NOMIS",
               "example" : "G12345",
               "type" : "string"
            },
            "niNumber" : {
               "description" : "National insurance number from HMRC",
               "example" : "AA112233B",
               "type" : "string"
            },
            "nomsNumber" : {
               "description" : "Offender number from NOMIS",
               "example" : "A1234CR",
               "type" : "string"
            },
            "pncNumber" : {
               "description" : "Number from the police national computer",
               "example" : "2004/0712343H",
               "type" : "string"
            }
         },
         "required" : [
            "crn"
         ],
         "title" : "IDs",
         "type" : "object"
      },
      "InputStream" : {
         "title" : "InputStream",
         "type" : "object"
      },
      "Institution" : {
         "properties" : {
            "code" : {
               "type" : "string"
            },
            "description" : {
               "type" : "string"
            },
            "establishmentType" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "institutionId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "institutionName" : {
               "type" : "string"
            },
            "isEstablishment" : {
               "type" : "boolean"
            },
            "isPrivate" : {
               "type" : "boolean"
            },
            "nomsPrisonInstitutionCode" : {
               "description" : "Prison institution code in NOMIS",
               "type" : "string"
            }
         },
         "required" : [
            "institutionId"
         ],
         "title" : "Institution",
         "type" : "object"
      },
      "InstitutionalReport" : {
         "properties" : {
            "conviction" : {
               "$ref" : "#/definitions/Conviction"
            },
            "institutionalReportId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "offenderId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "sentence" : {
               "$ref" : "#/definitions/Sentence",
               "description" : "Deprecated - Use conviction to access sentence"
            }
         },
         "title" : "InstitutionalReport",
         "type" : "object"
      },
      "KeyValue" : {
         "properties" : {
            "code" : {
               "type" : "string"
            },
            "description" : {
               "type" : "string"
            }
         },
         "title" : "KeyValue",
         "type" : "object"
      },
      "LicenceCondition" : {
         "properties" : {
            "active" : {
               "type" : "boolean"
            },
            "commencementDate" : {
               "format" : "date",
               "type" : "string"
            },
            "commencementNotes" : {
               "type" : "string"
            },
            "createdDateTime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "licenceConditionNotes" : {
               "type" : "string"
            },
            "licenceConditionTypeMainCat" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "startDate" : {
               "format" : "date",
               "type" : "string"
            },
            "terminationDate" : {
               "format" : "date",
               "type" : "string"
            },
            "terminationNotes" : {
               "type" : "string"
            }
         },
         "title" : "LicenceCondition",
         "type" : "object"
      },
      "LocalTime" : {
         "properties" : {
            "hour" : {
               "format" : "int32",
               "type" : "integer"
            },
            "minute" : {
               "format" : "int32",
               "type" : "integer"
            },
            "nano" : {
               "format" : "int32",
               "type" : "integer"
            },
            "second" : {
               "format" : "int32",
               "type" : "integer"
            }
         },
         "title" : "LocalTime",
         "type" : "object"
      },
      "ManagedOffender" : {
         "properties" : {
            "crnNumber" : {
               "type" : "string"
            },
            "currentOm" : {
               "type" : "boolean"
            },
            "currentPom" : {
               "type" : "boolean"
            },
            "currentRo" : {
               "type" : "boolean"
            },
            "nomsNumber" : {
               "type" : "string"
            },
            "offenderId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "offenderSurname" : {
               "type" : "string"
            },
            "omEndDate" : {
               "format" : "date",
               "type" : "string"
            },
            "omStartDate" : {
               "format" : "date",
               "type" : "string"
            },
            "staffCode" : {
               "type" : "string"
            }
         },
         "required" : [
            "crnNumber",
            "nomsNumber",
            "offenderId",
            "offenderSurname",
            "omEndDate",
            "omStartDate",
            "staffCode"
         ],
         "title" : "ManagedOffender",
         "type" : "object"
      },
      "Nsi" : {
         "properties" : {
            "actualStartDate" : {
               "format" : "date",
               "type" : "string"
            },
            "expectedStartDate" : {
               "format" : "date",
               "type" : "string"
            },
            "length" : {
               "format" : "int64",
               "type" : "integer"
            },
            "lengthUnit" : {
               "type" : "string"
            },
            "nsiId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "nsiManagers" : {
               "items" : {
                  "$ref" : "#/definitions/NsiManager"
               },
               "type" : "array"
            },
            "nsiStatus" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "nsiSubType" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "nsiType" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "referralDate" : {
               "format" : "date",
               "type" : "string"
            },
            "requirement" : {
               "$ref" : "#/definitions/Requirement"
            }
         },
         "title" : "Nsi",
         "type" : "object"
      },
      "NsiManager" : {
         "properties" : {
            "endDate" : {
               "format" : "date",
               "type" : "string"
            },
            "probationArea" : {
               "$ref" : "#/definitions/ProbationArea"
            },
            "staff" : {
               "$ref" : "#/definitions/StaffDetails"
            },
            "startDate" : {
               "format" : "date",
               "type" : "string"
            },
            "team" : {
               "$ref" : "#/definitions/Team"
            }
         },
         "title" : "NsiManager",
         "type" : "object"
      },
      "NsiWrapper" : {
         "description" : "NSI Wrapper",
         "properties" : {
            "nsis" : {
               "description" : "List of NSIs",
               "items" : {
                  "$ref" : "#/definitions/Nsi"
               },
               "type" : "array"
            }
         },
         "title" : "NsiWrapper",
         "type" : "object"
      },
      "ObjectNode" : {
         "title" : "ObjectNode",
         "type" : "object"
      },
      "Offence" : {
         "properties" : {
            "createdDatetime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "detail" : {
               "$ref" : "#/definitions/OffenceDetail"
            },
            "lastUpdatedDatetime" : {
               "format" : "date-time",
               "type" : "string"
            },
            "mainOffence" : {
               "type" : "boolean"
            },
            "offenceCount" : {
               "format" : "int64",
               "type" : "integer"
            },
            "offenceDate" : {
               "format" : "date-time",
               "type" : "string"
            },
            "offenceId" : {
               "type" : "string"
            },
            "offenderId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "tics" : {
               "format" : "int64",
               "type" : "integer"
            },
            "verdict" : {
               "type" : "string"
            }
         },
         "title" : "Offence",
         "type" : "object"
      },
      "OffenceDetail" : {
         "properties" : {
            "abbreviation" : {
               "type" : "string"
            },
            "cjitCode" : {
               "type" : "string"
            },
            "code" : {
               "type" : "string"
            },
            "description" : {
               "type" : "string"
            },
            "form20Code" : {
               "type" : "string"
            },
            "mainCategoryAbbreviation" : {
               "type" : "string"
            },
            "mainCategoryCode" : {
               "type" : "string"
            },
            "mainCategoryDescription" : {
               "type" : "string"
            },
            "ogrsOffenceCategory" : {
               "type" : "string"
            },
            "subCategoryAbbreviation" : {
               "type" : "string"
            },
            "subCategoryCode" : {
               "type" : "string"
            },
            "subCategoryDescription" : {
               "type" : "string"
            }
         },
         "title" : "OffenceDetail",
         "type" : "object"
      },
      "OffenderAlias" : {
         "properties" : {
            "dateOfBirth" : {
               "format" : "date",
               "type" : "string"
            },
            "firstName" : {
               "type" : "string"
            },
            "gender" : {
               "type" : "string"
            },
            "id" : {
               "type" : "string"
            },
            "middleNames" : {
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            },
            "surname" : {
               "type" : "string"
            }
         },
         "title" : "OffenderAlias",
         "type" : "object"
      },
      "OffenderDelta" : {
         "properties" : {
            "action" : {
               "description" : "Type of delta",
               "enum" : [
                  "UPSERT",
                  "DELETE"
               ],
               "example" : "UPSERT",
               "type" : "string"
            },
            "dateChanged" : {
               "description" : "The datetime the change occurred",
               "example" : "2019-11-27T15:12:43.000Z",
               "format" : "date-time",
               "type" : "string"
            },
            "offenderId" : {
               "description" : "Offender ID",
               "example" : 232423,
               "format" : "int64",
               "type" : "integer"
            }
         },
         "title" : "OffenderDelta",
         "type" : "object"
      },
      "OffenderDetail" : {
         "properties" : {
            "contactDetails" : {
               "$ref" : "#/definitions/ContactDetails"
            },
            "currentDisposal" : {
               "type" : "string"
            },
            "currentExclusion" : {
               "type" : "boolean"
            },
            "currentRestriction" : {
               "type" : "boolean"
            },
            "dateOfBirth" : {
               "format" : "date",
               "type" : "string"
            },
            "exclusionMessage" : {
               "type" : "string"
            },
            "firstName" : {
               "type" : "string"
            },
            "gender" : {
               "type" : "string"
            },
            "middleNames" : {
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            },
            "offenderAliases" : {
               "items" : {
                  "$ref" : "#/definitions/OffenderAlias"
               },
               "type" : "array"
            },
            "offenderId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "offenderManagers" : {
               "items" : {
                  "$ref" : "#/definitions/OffenderManager"
               },
               "type" : "array"
            },
            "offenderProfile" : {
               "$ref" : "#/definitions/OffenderProfile"
            },
            "otherIds" : {
               "$ref" : "#/definitions/IDs"
            },
            "partitionArea" : {
               "type" : "string"
            },
            "previousSurname" : {
               "type" : "string"
            },
            "restrictionMessage" : {
               "type" : "string"
            },
            "softDeleted" : {
               "type" : "boolean"
            },
            "surname" : {
               "type" : "string"
            },
            "title" : {
               "type" : "string"
            }
         },
         "required" : [
            "offenderId"
         ],
         "title" : "OffenderDetail",
         "type" : "object"
      },
      "OffenderDetailSummary" : {
         "properties" : {
            "contactDetails" : {
               "$ref" : "#/definitions/ContactDetailsSummary"
            },
            "currentDisposal" : {
               "type" : "string"
            },
            "currentExclusion" : {
               "type" : "boolean"
            },
            "currentRestriction" : {
               "type" : "boolean"
            },
            "dateOfBirth" : {
               "format" : "date",
               "type" : "string"
            },
            "firstName" : {
               "type" : "string"
            },
            "gender" : {
               "type" : "string"
            },
            "middleNames" : {
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            },
            "offenderId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "offenderProfile" : {
               "$ref" : "#/definitions/OffenderProfile"
            },
            "otherIds" : {
               "$ref" : "#/definitions/IDs"
            },
            "partitionArea" : {
               "type" : "string"
            },
            "previousSurname" : {
               "type" : "string"
            },
            "softDeleted" : {
               "type" : "boolean"
            },
            "surname" : {
               "type" : "string"
            },
            "title" : {
               "type" : "string"
            }
         },
         "required" : [
            "offenderId"
         ],
         "title" : "OffenderDetailSummary",
         "type" : "object"
      },
      "OffenderDocumentDetail" : {
         "properties" : {
            "author" : {
               "type" : "string"
            },
            "createdAt" : {
               "format" : "date-time",
               "type" : "string"
            },
            "documentName" : {
               "type" : "string"
            },
            "extendedDescription" : {
               "type" : "string"
            },
            "id" : {
               "type" : "string"
            },
            "lastModifiedAt" : {
               "format" : "date-time",
               "type" : "string"
            },
            "parentPrimaryKeyId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "reportDocumentDates" : {
               "$ref" : "#/definitions/ReportDocumentDates"
            },
            "subType" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "type" : {
               "$ref" : "#/definitions/KeyValue"
            }
         },
         "title" : "OffenderDocumentDetail",
         "type" : "object"
      },
      "OffenderDocuments" : {
         "properties" : {
            "convictions" : {
               "items" : {
                  "$ref" : "#/definitions/ConvictionDocuments"
               },
               "type" : "array"
            },
            "documents" : {
               "items" : {
                  "$ref" : "#/definitions/OffenderDocumentDetail"
               },
               "type" : "array"
            }
         },
         "title" : "OffenderDocuments",
         "type" : "object"
      },
      "OffenderIdentifiers" : {
         "description" : "Offender Identifiers",
         "properties" : {
            "additionalIdentifiers" : {
               "description" : "Additional identifiers",
               "items" : {
                  "$ref" : "#/definitions/AdditionalIdentifier"
               },
               "type" : "array"
            },
            "offenderId" : {
               "description" : "unique identifier for this offender",
               "example" : 1234567,
               "format" : "int64",
               "type" : "integer"
            },
            "primaryIdentifiers" : {
               "$ref" : "#/definitions/IDs",
               "description" : "Primary identifiers"
            }
         },
         "title" : "OffenderIdentifiers",
         "type" : "object"
      },
      "OffenderIdsResource" : {
         "properties" : {
            "offenderIds" : {
               "items" : {
                  "type" : "number"
               },
               "type" : "array"
            }
         },
         "title" : "OffenderIdsResource",
         "type" : "object"
      },
      "OffenderLanguages" : {
         "properties" : {
            "languageConcerns" : {
               "type" : "string"
            },
            "otherLanguages" : {
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            },
            "primaryLanguage" : {
               "type" : "string"
            },
            "requiresInterpreter" : {
               "type" : "boolean"
            }
         },
         "title" : "OffenderLanguages",
         "type" : "object"
      },
      "OffenderLatestRecall" : {
         "properties" : {
            "lastRecall" : {
               "$ref" : "#/definitions/OffenderRecall",
               "description" : "Last recall"
            },
            "lastRelease" : {
               "$ref" : "#/definitions/OffenderRelease",
               "description" : "Last release"
            }
         },
         "title" : "OffenderLatestRecall",
         "type" : "object"
      },
      "OffenderManager" : {
         "properties" : {
            "active" : {
               "type" : "boolean"
            },
            "allocationReason" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "fromDate" : {
               "format" : "date",
               "type" : "string"
            },
            "partitionArea" : {
               "type" : "string"
            },
            "probationArea" : {
               "$ref" : "#/definitions/ProbationArea"
            },
            "providerEmployee" : {
               "$ref" : "#/definitions/Human"
            },
            "softDeleted" : {
               "type" : "boolean"
            },
            "staff" : {
               "$ref" : "#/definitions/Human"
            },
            "team" : {
               "$ref" : "#/definitions/Team"
            },
            "toDate" : {
               "format" : "date",
               "type" : "string"
            },
            "trustOfficer" : {
               "$ref" : "#/definitions/Human"
            }
         },
         "title" : "OffenderManager",
         "type" : "object"
      },
      "OffenderProfile" : {
         "properties" : {
            "disabilities" : {
               "items" : {
                  "$ref" : "#/definitions/Disability"
               },
               "type" : "array"
            },
            "ethnicity" : {
               "type" : "string"
            },
            "immigrationStatus" : {
               "type" : "string"
            },
            "nationality" : {
               "type" : "string"
            },
            "notes" : {
               "type" : "string"
            },
            "offenderDetails" : {
               "type" : "string"
            },
            "offenderLanguages" : {
               "$ref" : "#/definitions/OffenderLanguages"
            },
            "previousConviction" : {
               "$ref" : "#/definitions/PreviousConviction"
            },
            "religion" : {
               "type" : "string"
            },
            "remandStatus" : {
               "type" : "string"
            },
            "riskColour" : {
               "type" : "string"
            },
            "secondaryNationality" : {
               "type" : "string"
            },
            "sexualOrientation" : {
               "type" : "string"
            }
         },
         "title" : "OffenderProfile",
         "type" : "object"
      },
      "OffenderRecall" : {
         "properties" : {
            "date" : {
               "description" : "The date the recall occurred",
               "example" : "2019-11-27",
               "format" : "date",
               "type" : "string"
            },
            "notes" : {
               "description" : "Some notes",
               "type" : "string"
            },
            "reason" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "The reason for the recall"
            }
         },
         "title" : "OffenderRecall",
         "type" : "object"
      },
      "OffenderRelease" : {
         "properties" : {
            "date" : {
               "description" : "The date the release occurred",
               "example" : "2019-11-26",
               "format" : "date",
               "type" : "string"
            },
            "institution" : {
               "$ref" : "#/definitions/Institution",
               "description" : "The institution the offender was released from"
            },
            "notes" : {
               "description" : "Some notes",
               "type" : "string"
            },
            "reason" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "The reason for the release"
            }
         },
         "title" : "OffenderRelease",
         "type" : "object"
      },
      "PageOfKeyValue" : {
         "properties" : {
            "content" : {
               "items" : {
                  "$ref" : "#/definitions/KeyValue"
               },
               "type" : "array"
            },
            "empty" : {
               "type" : "boolean"
            },
            "first" : {
               "type" : "boolean"
            },
            "last" : {
               "type" : "boolean"
            },
            "number" : {
               "format" : "int32",
               "type" : "integer"
            },
            "numberOfElements" : {
               "format" : "int32",
               "type" : "integer"
            },
            "pageable" : {
               "$ref" : "#/definitions/Pageable"
            },
            "size" : {
               "format" : "int32",
               "type" : "integer"
            },
            "sort" : {
               "$ref" : "#/definitions/Sort"
            },
            "totalElements" : {
               "format" : "int64",
               "type" : "integer"
            },
            "totalPages" : {
               "format" : "int32",
               "type" : "integer"
            }
         },
         "title" : "PageOfKeyValue",
         "type" : "object"
      },
      "PageOfPrimaryIdentifiers" : {
         "properties" : {
            "content" : {
               "items" : {
                  "$ref" : "#/definitions/PrimaryIdentifiers"
               },
               "type" : "array"
            },
            "empty" : {
               "type" : "boolean"
            },
            "first" : {
               "type" : "boolean"
            },
            "last" : {
               "type" : "boolean"
            },
            "number" : {
               "format" : "int32",
               "type" : "integer"
            },
            "numberOfElements" : {
               "format" : "int32",
               "type" : "integer"
            },
            "pageable" : {
               "$ref" : "#/definitions/Pageable"
            },
            "size" : {
               "format" : "int32",
               "type" : "integer"
            },
            "sort" : {
               "$ref" : "#/definitions/Sort"
            },
            "totalElements" : {
               "format" : "int64",
               "type" : "integer"
            },
            "totalPages" : {
               "format" : "int32",
               "type" : "integer"
            }
         },
         "title" : "PageOfPrimaryIdentifiers",
         "type" : "object"
      },
      "Pageable" : {
         "properties" : {
            "offset" : {
               "format" : "int64",
               "type" : "integer"
            },
            "pageNumber" : {
               "format" : "int32",
               "type" : "integer"
            },
            "pageSize" : {
               "format" : "int32",
               "type" : "integer"
            },
            "paged" : {
               "type" : "boolean"
            },
            "sort" : {
               "$ref" : "#/definitions/Sort"
            },
            "unpaged" : {
               "type" : "boolean"
            }
         },
         "title" : "Pageable",
         "type" : "object"
      },
      "PersonalCircumstance" : {
         "properties" : {
            "endDate" : {
               "description" : "When the offender ended this circumstance",
               "example" : "2019-09-11",
               "format" : "date",
               "type" : "string"
            },
            "evidenced" : {
               "description" : "true if evidence was supplied for this circumstance",
               "example" : true,
               "type" : "boolean"
            },
            "notes" : {
               "description" : "Additional notes",
               "type" : "string"
            },
            "offenderId" : {
               "description" : "Unique id of this offender",
               "example" : 2500343964,
               "format" : "int64",
               "type" : "integer"
            },
            "personalCircumstanceId" : {
               "description" : "Unique id of this personal circumstance",
               "example" : 2500064995,
               "format" : "int64",
               "type" : "integer"
            },
            "personalCircumstanceSubType" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "The type of sub personal circumstance"
            },
            "personalCircumstanceType" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "The type of personal circumstance"
            },
            "probationArea" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "The probation area that added this circumstance"
            },
            "startDate" : {
               "description" : "When the offender started this circumstance",
               "example" : "2019-09-11",
               "format" : "date",
               "type" : "string"
            }
         },
         "title" : "PersonalCircumstance",
         "type" : "object"
      },
      "PersonalCircumstances" : {
         "description" : "Personal circumstances Wrapper",
         "properties" : {
            "personalCircumstances" : {
               "description" : "List of personal circumstances",
               "items" : {
                  "$ref" : "#/definitions/PersonalCircumstance"
               },
               "type" : "array"
            }
         },
         "title" : "PersonalCircumstances",
         "type" : "object"
      },
      "PhoneNumber" : {
         "properties" : {
            "number" : {
               "type" : "string"
            },
            "type" : {
               "enum" : [
                  "TELEPHONE",
                  "MOBILE"
               ],
               "type" : "string"
            }
         },
         "title" : "PhoneNumber",
         "type" : "object"
      },
      "PreviousConviction" : {
         "properties" : {
            "convictionDate" : {
               "format" : "date",
               "type" : "string"
            },
            "detail" : {
               "additionalProperties" : {
                  "type" : "string"
               },
               "type" : "object"
            }
         },
         "title" : "PreviousConviction",
         "type" : "object"
      },
      "PrimaryIdentifiers" : {
         "description" : "Offender primary identifiers",
         "properties" : {
            "crn" : {
               "description" : "case reference number",
               "example" : "12345C",
               "type" : "string"
            },
            "offenderId" : {
               "description" : "unique identifier for this offender",
               "example" : 1234567,
               "format" : "int64",
               "type" : "integer"
            }
         },
         "required" : [
            "crn"
         ],
         "title" : "PrimaryIdentifiers",
         "type" : "object"
      },
      "ProbationArea" : {
         "properties" : {
            "code" : {
               "description" : "area code",
               "example" : "N01",
               "type" : "string"
            },
            "description" : {
               "description" : "description",
               "example" : "NPS North West",
               "type" : "string"
            },
            "institution" : {
               "$ref" : "#/definitions/Institution"
            },
            "nps" : {
               "description" : "True if NPS else CRC",
               "example" : true,
               "type" : "boolean"
            },
            "organisation" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "probationAreaId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "teams" : {
               "items" : {
                  "$ref" : "#/definitions/AllTeam"
               },
               "type" : "array"
            }
         },
         "required" : [
            "probationAreaId"
         ],
         "title" : "ProbationArea",
         "type" : "object"
      },
      "ReferenceData" : {
         "properties" : {
            "active" : {
               "description" : "true if this item is currently selectable in Delius",
               "type" : "boolean"
            },
            "code" : {
               "description" : "code of reference data",
               "example" : "VISO",
               "type" : "string"
            },
            "description" : {
               "description" : "description of reference data",
               "example" : "ViSOR Number",
               "type" : "string"
            }
         },
         "title" : "ReferenceData",
         "type" : "object"
      },
      "ReferenceDataList" : {
         "description" : "Reference data list",
         "properties" : {
            "referenceData" : {
               "description" : "List of reference data items",
               "items" : {
                  "$ref" : "#/definitions/ReferenceData"
               },
               "type" : "array"
            }
         },
         "title" : "ReferenceDataList",
         "type" : "object"
      },
      "ReferenceDataSets" : {
         "description" : "Reference data sets",
         "properties" : {
            "referenceDataSets" : {
               "description" : "List of reference data sets, for example \n{\n            \"code\": \"ADDITIONAL SENTENCE\",\n            \"description\": \"Additional Sentence\"\n        }",
               "items" : {
                  "$ref" : "#/definitions/KeyValue"
               },
               "type" : "array"
            }
         },
         "title" : "ReferenceDataSets",
         "type" : "object"
      },
      "Registration" : {
         "properties" : {
            "active" : {
               "description" : "true if active",
               "type" : "boolean"
            },
            "deregisteringNotes" : {
               "description" : "Additional notes about the de-registration",
               "type" : "string"
            },
            "deregisteringOfficer" : {
               "$ref" : "#/definitions/Human",
               "description" : "Probation officer who removed the offender from the register"
            },
            "deregisteringProbationArea" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Probation area that removed the offender from the register"
            },
            "deregisteringTeam" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Probation team that removed the offender from the register"
            },
            "endDate" : {
               "description" : "Date removed from register",
               "example" : "2021-01-30",
               "format" : "date",
               "type" : "string"
            },
            "nextReviewDate" : {
               "description" : "Date probation should review if the offender should still be on still register",
               "example" : "2021-01-30",
               "format" : "date",
               "type" : "string"
            },
            "notes" : {
               "description" : "Additional notes",
               "type" : "string"
            },
            "offenderId" : {
               "description" : "Unique id of this offender",
               "example" : 2500343964,
               "format" : "int64",
               "type" : "integer"
            },
            "register" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Register this offender has been added to. For example RoSH"
            },
            "registerCategory" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Category of register. Only used for certain registers for example Hate Crime category"
            },
            "registerLevel" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Level of register. Only used for certain registers for example Lifer - Supervised"
            },
            "registeringOfficer" : {
               "$ref" : "#/definitions/Human",
               "description" : "Probation officer who added the offender to the register"
            },
            "registeringProbationArea" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Probation area that added the offender to the register"
            },
            "registeringTeam" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Probation team that added the offender to the register"
            },
            "registrationId" : {
               "description" : "Unique id of this registration",
               "example" : 2500064995,
               "format" : "int64",
               "type" : "integer"
            },
            "reviewPeriodMonths" : {
               "description" : "Number of months a review should take place",
               "example" : 6,
               "format" : "int64",
               "type" : "integer"
            },
            "riskColour" : {
               "description" : "Literal visual colour this register represents",
               "example" : "Amber",
               "type" : "string"
            },
            "startDate" : {
               "description" : "Date added to register",
               "example" : "2021-01-30",
               "format" : "date",
               "type" : "string"
            },
            "type" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Type of register. For example Low RoSH"
            },
            "warnUser" : {
               "description" : "true if the register is serious enough to warn the probation officer of risk to themselves",
               "type" : "boolean"
            }
         },
         "title" : "Registration",
         "type" : "object"
      },
      "Registrations" : {
         "description" : "Registration Wrapper",
         "properties" : {
            "registrations" : {
               "description" : "List of registrations",
               "items" : {
                  "$ref" : "#/definitions/Registration"
               },
               "type" : "array"
            }
         },
         "title" : "Registrations",
         "type" : "object"
      },
      "ReplaceCustodyKeyDates" : {
         "description" : "Any dates not supplied will be removed from the associated conviction",
         "properties" : {
            "conditionalReleaseDate" : {
               "description" : "Conditional release date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "expectedReleaseDate" : {
               "description" : "Expected release date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "hdcEligibilityDate" : {
               "description" : "Home detention curfew eligibility date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "licenceExpiryDate" : {
               "description" : "Licence expiry date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "paroleEligibilityDate" : {
               "description" : "Parole eligibility date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "postSentenceSupervisionEndDate" : {
               "description" : "Post sentence Supervision end date. AKA Top-up supervision end data",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            },
            "sentenceExpiryDate" : {
               "description" : "Sentence expiry date",
               "example" : "2020-06-23",
               "format" : "date",
               "type" : "string"
            }
         },
         "title" : "ReplaceCustodyKeyDates",
         "type" : "object"
      },
      "ReportDocumentDates" : {
         "properties" : {
            "completedDate" : {
               "format" : "date-time",
               "type" : "string"
            },
            "requestedDate" : {
               "format" : "date",
               "type" : "string"
            },
            "requiredDate" : {
               "format" : "date",
               "type" : "string"
            }
         },
         "title" : "ReportDocumentDates",
         "type" : "object"
      },
      "Requirement" : {
         "properties" : {
            "active" : {
               "description" : "Is the requirement currently active",
               "type" : "boolean"
            },
            "adRequirementTypeMainCategory" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "adRequirementTypeSubCategory" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "commencementDate" : {
               "format" : "date",
               "type" : "string"
            },
            "expectedEndDate" : {
               "format" : "date",
               "type" : "string"
            },
            "expectedStartDate" : {
               "format" : "date",
               "type" : "string"
            },
            "length" : {
               "description" : "The number of temporal units to complete the requirement (see lengthUnit field for unit)",
               "format" : "int64",
               "type" : "integer"
            },
            "lengthUnit" : {
               "description" : "The temporal unit corresponding to the length field",
               "type" : "string"
            },
            "requirementId" : {
               "description" : "Unique identifier for the requirement",
               "format" : "int64",
               "type" : "integer"
            },
            "requirementNotes" : {
               "description" : "Notes added by probation relating to the requirement",
               "type" : "string"
            },
            "requirementTypeMainCategory" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "requirementTypeSubCategory" : {
               "$ref" : "#/definitions/KeyValue"
            },
            "startDate" : {
               "format" : "date",
               "type" : "string"
            },
            "terminationDate" : {
               "format" : "date",
               "type" : "string"
            },
            "terminationReason" : {
               "$ref" : "#/definitions/KeyValue"
            }
         },
         "required" : [
            "requirementId"
         ],
         "title" : "Requirement",
         "type" : "object"
      },
      "Resource" : {
         "properties" : {
            "description" : {
               "type" : "string"
            },
            "file" : {
               "$ref" : "#/definitions/File"
            },
            "filename" : {
               "type" : "string"
            },
            "inputStream" : {
               "$ref" : "#/definitions/InputStream"
            },
            "open" : {
               "type" : "boolean"
            },
            "readable" : {
               "type" : "boolean"
            },
            "uri" : {
               "$ref" : "#/definitions/URI"
            },
            "url" : {
               "$ref" : "#/definitions/URL"
            }
         },
         "title" : "Resource",
         "type" : "object"
      },
      "ResponsibleOfficer" : {
         "properties" : {
            "currentOm" : {
               "type" : "boolean"
            },
            "currentPom" : {
               "type" : "boolean"
            },
            "currentRo" : {
               "type" : "boolean"
            },
            "forenames" : {
               "type" : "string"
            },
            "lduCode" : {
               "type" : "string"
            },
            "lduDescription" : {
               "type" : "string"
            },
            "nomsNumber" : {
               "type" : "string"
            },
            "offenderManagerId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "omEndDate" : {
               "format" : "date",
               "type" : "string"
            },
            "omStartDate" : {
               "format" : "date",
               "type" : "string"
            },
            "prisonOffenderManagerId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "probationAreaCode" : {
               "type" : "string"
            },
            "probationAreaDescription" : {
               "type" : "string"
            },
            "providerTeamCode" : {
               "type" : "string"
            },
            "providerTeamDescription" : {
               "type" : "string"
            },
            "responsibleOfficerId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "staffCode" : {
               "type" : "string"
            },
            "surname" : {
               "type" : "string"
            }
         },
         "required" : [
            "nomsNumber",
            "omEndDate",
            "omStartDate",
            "staffCode",
            "surname"
         ],
         "title" : "ResponsibleOfficer",
         "type" : "object"
      },
      "Sentence" : {
         "properties" : {
            "defaultLength" : {
               "format" : "int64",
               "type" : "integer"
            },
            "description" : {
               "type" : "string"
            },
            "effectiveLength" : {
               "format" : "int64",
               "type" : "integer"
            },
            "expectedSentenceEndDate" : {
               "description" : "The expected end date of the sentence",
               "format" : "date",
               "type" : "string"
            },
            "lengthInDays" : {
               "format" : "int64",
               "type" : "integer"
            },
            "originalLength" : {
               "format" : "int64",
               "type" : "integer"
            },
            "originalLengthUnits" : {
               "type" : "string"
            },
            "secondLength" : {
               "format" : "int64",
               "type" : "integer"
            },
            "secondLengthUnits" : {
               "type" : "string"
            },
            "sentenceId" : {
               "format" : "int64",
               "type" : "integer"
            },
            "startDate" : {
               "description" : "Date sentence started",
               "format" : "date",
               "type" : "string"
            },
            "terminationDate" : {
               "format" : "date",
               "type" : "string"
            },
            "terminationReason" : {
               "type" : "string"
            },
            "unpaidWork" : {
               "$ref" : "#/definitions/UnpaidWork",
               "description" : "Unpaid Work to date associated with this sentence"
            }
         },
         "title" : "Sentence",
         "type" : "object"
      },
      "Sort" : {
         "properties" : {
            "empty" : {
               "type" : "boolean"
            },
            "sorted" : {
               "type" : "boolean"
            },
            "unsorted" : {
               "type" : "boolean"
            }
         },
         "title" : "Sort",
         "type" : "object"
      },
      "StaffDetails" : {
         "properties" : {
            "email" : {
               "description" : "the optional email address of this staff member, will be absent if the staff member is not a user of Delius",
               "example" : "sheila.hancock@test.justice.gov.uk",
               "type" : "string"
            },
            "staff" : {
               "$ref" : "#/definitions/Human",
               "description" : "staff name details"
            },
            "staffCode" : {
               "description" : "staff code AKA officer code",
               "example" : "SH0001",
               "type" : "string"
            },
            "teams" : {
               "description" : "all teams related to this staff member",
               "items" : {
                  "$ref" : "#/definitions/Team"
               },
               "type" : "array"
            },
            "username" : {
               "description" : "the optional username of this staff member, will be absent if the staff member is not a user of Delius",
               "example" : "SheilaHancockNPS",
               "type" : "string"
            }
         },
         "title" : "StaffDetails",
         "type" : "object"
      },
      "Team" : {
         "properties" : {
            "borough" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Team's borough"
            },
            "code" : {
               "description" : "Team code",
               "example" : "C01T04",
               "type" : "string"
            },
            "description" : {
               "description" : "Team description",
               "example" : "OMU A",
               "type" : "string"
            },
            "district" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Team's district"
            },
            "localDeliveryUnit" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Local Delivery Unit - provides a geographic grouping of teams"
            },
            "teamType" : {
               "$ref" : "#/definitions/KeyValue",
               "description" : "Team Type - provides a logical, not necessarily geographic, grouping of teams"
            },
            "telephone" : {
               "description" : "Team telephone, often not populated",
               "example" : "OMU A",
               "type" : "string"
            }
         },
         "title" : "Team",
         "type" : "object"
      },
      "URI" : {
         "properties" : {
            "absolute" : {
               "type" : "boolean"
            },
            "authority" : {
               "type" : "string"
            },
            "fragment" : {
               "type" : "string"
            },
            "host" : {
               "type" : "string"
            },
            "opaque" : {
               "type" : "boolean"
            },
            "path" : {
               "type" : "string"
            },
            "port" : {
               "format" : "int32",
               "type" : "integer"
            },
            "query" : {
               "type" : "string"
            },
            "rawAuthority" : {
               "type" : "string"
            },
            "rawFragment" : {
               "type" : "string"
            },
            "rawPath" : {
               "type" : "string"
            },
            "rawQuery" : {
               "type" : "string"
            },
            "rawSchemeSpecificPart" : {
               "type" : "string"
            },
            "rawUserInfo" : {
               "type" : "string"
            },
            "scheme" : {
               "type" : "string"
            },
            "schemeSpecificPart" : {
               "type" : "string"
            },
            "userInfo" : {
               "type" : "string"
            }
         },
         "title" : "URI",
         "type" : "object"
      },
      "URL" : {
         "properties" : {
            "authority" : {
               "type" : "string"
            },
            "content" : {
               "type" : "object"
            },
            "defaultPort" : {
               "format" : "int32",
               "type" : "integer"
            },
            "file" : {
               "type" : "string"
            },
            "host" : {
               "type" : "string"
            },
            "path" : {
               "type" : "string"
            },
            "port" : {
               "format" : "int32",
               "type" : "integer"
            },
            "protocol" : {
               "type" : "string"
            },
            "query" : {
               "type" : "string"
            },
            "ref" : {
               "type" : "string"
            },
            "userInfo" : {
               "type" : "string"
            }
         },
         "title" : "URL",
         "type" : "object"
      },
      "UnpaidWork" : {
         "properties" : {
            "appointments" : {
               "$ref" : "#/definitions/Appointments",
               "description" : "Details of appointment history to date"
            },
            "minutesCompleted" : {
               "description" : "Minutes of unpaid work credited to the service user to date",
               "format" : "int64",
               "type" : "integer"
            },
            "minutesOrdered" : {
               "description" : "Minutes of unpaid work ordered for this sentence",
               "format" : "int64",
               "type" : "integer"
            },
            "status" : {
               "description" : "Status description",
               "type" : "string"
            }
         },
         "title" : "UnpaidWork",
         "type" : "object"
      },
      "UpdateCustody" : {
         "properties" : {
            "nomsPrisonInstitutionCode" : {
               "description" : "Prison institution code in NOMIS",
               "example" : "MDI",
               "type" : "string"
            }
         },
         "title" : "UpdateCustody",
         "type" : "object"
      },
      "UpdateCustodyBookingNumber" : {
         "properties" : {
            "bookingNumber" : {
               "description" : "Prison Booking number to be set on the conviction. AKA bookNo, prison number ",
               "example" : "38339A",
               "type" : "string"
            },
            "sentenceStartDate" : {
               "description" : "Sentence start date from prison used to match with probation conviction",
               "example" : "2020-02-28",
               "format" : "date",
               "type" : "string"
            }
         },
         "title" : "UpdateCustodyBookingNumber",
         "type" : "object"
      },
      "UpdateOffenderNomsNumber" : {
         "properties" : {
            "nomsNumber" : {
               "description" : "NOMS number to be set on the offender. AKA offenderNo",
               "example" : "G5555TT",
               "type" : "string"
            }
         },
         "title" : "UpdateOffenderNomsNumber",
         "type" : "object"
      },
      "UserAreas" : {
         "description" : "User's probation areas",
         "properties" : {
            "homeProbationArea" : {
               "description" : "The home area for this user",
               "example" : "N02",
               "type" : "string"
            },
            "probationAreas" : {
               "description" : "All probation areas the user can access AKA dataset",
               "example" : [
                  "N01",
                  "N02"
               ],
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            }
         },
         "title" : "UserAreas",
         "type" : "object"
      },
      "UserDetails" : {
         "description" : "User Details",
         "properties" : {
            "email" : {
               "description" : "Email address of the user",
               "example" : "test@digital.justice.gov.uk",
               "type" : "string"
            },
            "enabled" : {
               "description" : "Account is enabled if true",
               "example" : false,
               "type" : "boolean"
            },
            "firstName" : {
               "description" : "First name of the user",
               "example" : "John",
               "type" : "string"
            },
            "roles" : {
               "description" : "Roles For this User",
               "items" : {
                  "$ref" : "#/definitions/UserRole"
               },
               "type" : "array"
            },
            "surname" : {
               "description" : "Surname of the user",
               "example" : "Smith",
               "type" : "string"
            },
            "userId" : {
               "description" : "User ID of the user",
               "example" : 12345,
               "format" : "int64",
               "type" : "integer"
            },
            "username" : {
               "description" : "The username of the user",
               "example" : "test.user",
               "type" : "string"
            }
         },
         "required" : [
            "enabled",
            "firstName",
            "surname",
            "userId"
         ],
         "title" : "UserDetails",
         "type" : "object"
      },
      "UserDetailsWrapper" : {
         "description" : "User Details Wrapper",
         "properties" : {
            "userDetailsList" : {
               "description" : "List of User Details",
               "items" : {
                  "$ref" : "#/definitions/UserDetails"
               },
               "type" : "array"
            }
         },
         "title" : "UserDetailsWrapper",
         "type" : "object"
      },
      "UserRole" : {
         "description" : "User Roles",
         "properties" : {
            "name" : {
               "description" : "Code/Name of the Role",
               "example" : "TEST_ROLE",
               "type" : "string"
            }
         },
         "required" : [
            "name"
         ],
         "title" : "UserRole",
         "type" : "object"
      }
   },
   "host" : "community-api-public.test.delius.probation.hmpps.dsd.io",
   "info" : {
      "contact" : {
         "email" : "dps-hmpps@digital.justice.gov.uk",
         "name" : "HMPPS Digital Studio"
      },
      "description" : "REST service for accessing community probation information\nThis service serves two sets of APIs, those secured by OAuth2 (and marked as Secure) and those internal to the Probation New Tech Application which are not accessible to any other applications",
      "license" : {
         "name" : "Open Government Licence v3.0",
         "url" : "https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
      },
      "termsOfService" : "https://gateway.nomis-api.service.justice.gov.uk/auth/terms",
      "title" : "Community API Documentation",
      "version" : "2020-08-03.1851.5c5104c"
   },
   "paths" : {
      "/api/documentLink" : {
         "post" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "insertDocumentUsingPOST",
            "parameters" : [
               {
                  "description" : "documentLink",
                  "in" : "body",
                  "name" : "documentLink",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/DocumentLink"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "201" : {
                  "description" : "Created"
               }
            },
            "summary" : "insertDocument",
            "tags" : [
               "Offender Documents"
            ]
         }
      },
      "/api/documents/{documentId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getDocumentByIdUsingGET",
            "parameters" : [
               {
                  "description" : "documentId",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/Resource"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getDocumentById",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/health" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "healthUsingGET",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "string"
                  }
               }
            },
            "summary" : "health",
            "tags" : [
               "Legacy Health Checks"
            ]
         }
      },
      "/api/info" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "infoUsingGET",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "string"
                  }
               }
            },
            "summary" : "info",
            "tags" : [
               "Legacy Health Checks"
            ]
         }
      },
      "/api/logon" : {
         "post" : {
            "consumes" : [
               "text/plain"
            ],
            "deprecated" : false,
            "operationId" : "getTokenUsingPOST",
            "parameters" : [
               {
                  "description" : "distinguishedName",
                  "in" : "body",
                  "name" : "distinguishedName",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "string"
                  }
               },
               "404" : {
                  "description" : "User lookup: not found"
               }
            },
            "summary" : "getToken",
            "tags" : [
               "Logon as user"
            ]
         }
      },
      "/api/offenderDeltaIds" : {
         "delete" : {
            "deprecated" : false,
            "operationId" : "deleteOffenderDeltasUsingDELETE",
            "parameters" : [
               {
                  "description" : "before",
                  "format" : "date-time",
                  "in" : "query",
                  "name" : "before",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path"
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "deleteOffenderDeltas",
            "tags" : [
               "Offender deltas"
            ]
         },
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDeltasUsingGET",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/OffenderDelta"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderDeltas",
            "tags" : [
               "Offender deltas"
            ]
         }
      },
      "/api/offenders/count" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "offenderCountUsingGET",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/Count"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "offenderCount",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/crn/{crn}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderSummaryByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetailSummary"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderSummaryByCrn",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/crn/{crn}/all" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getFullFatOffenderByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetail"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getFullFatOffenderByCrn",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/crn/{crn}/appointments" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderReportAppointmentByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "attended",
                  "enum" : [
                     "ATTENDED",
                     "UNATTENDED",
                     "NOT_RECORDED"
                  ],
                  "in" : "query",
                  "name" : "attended",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "allowEmptyValue" : false,
                  "description" : "date of the earliest appointment",
                  "in" : "query",
                  "name" : "from",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "allowEmptyValue" : false,
                  "description" : "date of the latest appointment",
                  "in" : "query",
                  "name" : "to",
                  "required" : false,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Appointment"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderReportAppointmentByCrn",
            "tags" : [
               "Offender Appointments"
            ]
         }
      },
      "/api/offenders/crn/{crn}/contacts" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderReportContactByCrnUsingGET",
            "parameters" : [
               {
                  "collectionFormat" : "multi",
                  "description" : "contactTypes",
                  "in" : "query",
                  "items" : {
                     "type" : "string"
                  },
                  "name" : "contactTypes",
                  "required" : false,
                  "type" : "array"
               },
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "from",
                  "in" : "query",
                  "name" : "from",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "description" : "to",
                  "in" : "query",
                  "name" : "to",
                  "required" : false,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Contact"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderReportContactByCrn",
            "tags" : [
               "Offender Contacts"
            ]
         }
      },
      "/api/offenders/crn/{crn}/convictions" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderConvictionsByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Conviction"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderConvictionsByCrn",
            "tags" : [
               "Offender convictions"
            ]
         }
      },
      "/api/offenders/crn/{crn}/courtAppearances" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtAppearancesByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CourtAppearance"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtAppearancesByCrn",
            "tags" : [
               "Offender Court Appearances"
            ]
         }
      },
      "/api/offenders/crn/{crn}/courtReports" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtReportsByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CourtReport"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtReportsByCrn",
            "tags" : [
               "Offender Court Reports"
            ]
         }
      },
      "/api/offenders/crn/{crn}/courtReports/{courtReportId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtReportByCrnAndCourtReportIdUsingGET",
            "parameters" : [
               {
                  "description" : "courtReportId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "courtReportId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/CourtReport"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtReportByCrnAndCourtReportId",
            "tags" : [
               "Offender Court Reports"
            ]
         }
      },
      "/api/offenders/crn/{crn}/documents" : {
         "get" : {
            "deprecated" : false,
            "description" : "This uses Alfresco as it's source of information",
            "operationId" : "getOffenderDocumentListByNomsNumber",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/DocumentMeta"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "Returns all offender related documents as a flat list given CRN",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/crn/{crn}/documents/{documentId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "documentId",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/Resource"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderDocumentByCrn",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/crn/{crn}/documents/{documentId}/detail" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentDetailByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "documentId",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/DocumentMeta"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderDocumentDetailByCrn",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/crn/{crn}/institutionalReports" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderInstitutionalReportsByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/InstitutionalReport"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderInstitutionalReportsByCrn",
            "tags" : [
               "Offender institutional Reports"
            ]
         }
      },
      "/api/offenders/crn/{crn}/institutionalReports/{institutionalReportId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderInstitutionalReportByCrnAndInstitutionalReportIdUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "institutionalReportId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "institutionalReportId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/InstitutionalReport"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderInstitutionalReportByCrnAndInstitutionalReportId",
            "tags" : [
               "Offender institutional Reports"
            ]
         }
      },
      "/api/offenders/crn/{crn}/offences" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderOffencesByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Offence"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderOffencesByCrn",
            "tags" : [
               "Offender offences"
            ]
         }
      },
      "/api/offenders/crn/{crn}/offenderManagers" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderManagerByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/OffenderManager"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderManagerByCrn",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/crn/{crn}/personalCircumstances" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderPersonalCircumstancesByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/PersonalCircumstance"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderPersonalCircumstancesByCrn",
            "tags" : [
               "Offender personalCircumstances"
            ]
         }
      },
      "/api/offenders/crn/{crn}/registrations" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderRegistrationsByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Registration"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderRegistrationsByCrn",
            "tags" : [
               "Offender registrations"
            ]
         }
      },
      "/api/offenders/crn/{crn}/userAccess" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "checkUserAccessByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "User has unrestricted access to offender",
                  "schema" : {
                     "$ref" : "#/definitions/AccessLimitation"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "User is restricted from access to offender",
                  "schema" : {
                     "$ref" : "#/definitions/AccessLimitation"
                  }
               },
               "404" : {
                  "description" : "No such offender, or no such User (see body for detail)"
               }
            },
            "summary" : "checkUserAccessByCrn",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderSummaryByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetailSummary"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderSummaryByNomsNumber",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/all" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getFullFatOffenderByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetail"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getFullFatOffenderByNomsNumber",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/appointments" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderAppointmentReportByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "attended",
                  "enum" : [
                     "ATTENDED",
                     "UNATTENDED",
                     "NOT_RECORDED"
                  ],
                  "in" : "query",
                  "name" : "attended",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "allowEmptyValue" : false,
                  "description" : "date of the earliest appointment",
                  "in" : "query",
                  "name" : "from",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "allowEmptyValue" : false,
                  "description" : "date of the latest appointment",
                  "in" : "query",
                  "name" : "to",
                  "required" : false,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Appointment"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderAppointmentReportByNomsNumber",
            "tags" : [
               "Offender Appointments"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/contacts" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderContactReportByNomsNumberUsingGET",
            "parameters" : [
               {
                  "collectionFormat" : "multi",
                  "description" : "contactTypes",
                  "in" : "query",
                  "items" : {
                     "type" : "string"
                  },
                  "name" : "contactTypes",
                  "required" : false,
                  "type" : "array"
               },
               {
                  "description" : "from",
                  "in" : "query",
                  "name" : "from",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "to",
                  "in" : "query",
                  "name" : "to",
                  "required" : false,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Contact"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderContactReportByNomsNumber",
            "tags" : [
               "Offender Contacts"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/convictions" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderConvictionsByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Conviction"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderConvictionsByNomsNumber",
            "tags" : [
               "Offender convictions"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/courtAppearances" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtAppearancesByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CourtAppearance"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtAppearancesByNomsNumber",
            "tags" : [
               "Offender Court Appearances"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/courtReports" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtReportsByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CourtReport"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtReportsByNomsNumber",
            "tags" : [
               "Offender Court Reports"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/courtReports/{courtReportId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtReportByNomsNumberAndCourtReportIdUsingGET",
            "parameters" : [
               {
                  "description" : "courtReportId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "courtReportId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/CourtReport"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtReportByNomsNumberAndCourtReportId",
            "tags" : [
               "Offender Court Reports"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/documents" : {
         "get" : {
            "deprecated" : false,
            "description" : "This uses Alfresco as it's source of information",
            "operationId" : "getOffenderDocumentListByNomsNumber_1",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/DocumentMeta"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "Returns all offender related documents as a flat list given nomsNumber",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/documents/{documentId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "documentId",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/Resource"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderDocumentByOffenderId",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/documents/{documentId}/detail" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentDetailByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "documentId",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/DocumentMeta"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderDocumentDetailByNomsNumber",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/institutionalReports" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderInstitutionalReportsByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/InstitutionalReport"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderInstitutionalReportsByNomsNumber",
            "tags" : [
               "Offender institutional Reports"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/institutionalReports/{institutionalReportId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderInstitutionalReportByNomsNumberAndInstitutionalReportIdUsingGET",
            "parameters" : [
               {
                  "description" : "institutionalReportId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "institutionalReportId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/InstitutionalReport"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderInstitutionalReportByNomsNumberAndInstitutionalReportId",
            "tags" : [
               "Offender institutional Reports"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/offences" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderOffencesByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Offence"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderOffencesByNomsNumber",
            "tags" : [
               "Offender offences"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/offenderManagers" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderManagerByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/OffenderManager"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderManagerByNomsNumber",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/personalCircumstances" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderPersonalCircumstancesByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/PersonalCircumstance"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderPersonalCircumstancesByNomsNumber",
            "tags" : [
               "Offender personalCircumstances"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/registrations" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderRegistrationsByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Registration"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderRegistrationsByNomsNumber",
            "tags" : [
               "Offender registrations"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/responsibleOfficers" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getResponsibleOfficersByNomsNumberUsingGET",
            "parameters" : [
               {
                  "default" : false,
                  "description" : "current",
                  "in" : "query",
                  "name" : "current",
                  "required" : false,
                  "type" : "boolean"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "A list of responsible officers for an offender",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/ResponsibleOfficer"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "The requesting user was restricted from access",
                  "schema" : {
                     "$ref" : "#/definitions/AccessLimitation"
                  }
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "getResponsibleOfficersByNomsNumber",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/nomsNumber/{nomsNumber}/userAccess" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "checkUserAccessByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "User has unrestricted access to offender",
                  "schema" : {
                     "$ref" : "#/definitions/AccessLimitation"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "User is restricted from access to offender",
                  "schema" : {
                     "$ref" : "#/definitions/AccessLimitation"
                  }
               },
               "404" : {
                  "description" : "No such offender, or no such User (see body for detail)"
               }
            },
            "summary" : "checkUserAccessByNomsNumber",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetailSummary"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderByOffenderId",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/all" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getFullFatOffenderByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetail"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getFullFatOffenderByOffenderId",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/appointments" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderAppointmentReportByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "attended",
                  "enum" : [
                     "ATTENDED",
                     "UNATTENDED",
                     "NOT_RECORDED"
                  ],
                  "in" : "query",
                  "name" : "attended",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "allowEmptyValue" : false,
                  "description" : "date of the earliest appointment",
                  "in" : "query",
                  "name" : "from",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "allowEmptyValue" : false,
                  "description" : "date of the latest appointment",
                  "in" : "query",
                  "name" : "to",
                  "required" : false,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Appointment"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderAppointmentReportByOffenderId",
            "tags" : [
               "Offender Appointments"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/contacts" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderContactReportByOffenderIdUsingGET",
            "parameters" : [
               {
                  "collectionFormat" : "multi",
                  "description" : "contactTypes",
                  "in" : "query",
                  "items" : {
                     "type" : "string"
                  },
                  "name" : "contactTypes",
                  "required" : false,
                  "type" : "array"
               },
               {
                  "description" : "from",
                  "in" : "query",
                  "name" : "from",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "to",
                  "in" : "query",
                  "name" : "to",
                  "required" : false,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Contact"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderContactReportByOffenderId",
            "tags" : [
               "Offender Contacts"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/convictions" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderConvictionsByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Conviction"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderConvictionsByOffenderId",
            "tags" : [
               "Offender convictions"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/courtAppearances" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtAppearancesByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CourtAppearance"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtAppearancesByOffenderId",
            "tags" : [
               "Offender Court Appearances"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/courtReports" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtReportsByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CourtReport"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtReportsByOffenderId",
            "tags" : [
               "Offender Court Reports"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/courtReports/{courtReportId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderCourtReportByOffenderIdAndCourtReportIdUsingGET",
            "parameters" : [
               {
                  "description" : "courtReportId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "courtReportId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/CourtReport"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderCourtReportByOffenderIdAndCourtReportId",
            "tags" : [
               "Offender Court Reports"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/documents" : {
         "get" : {
            "deprecated" : false,
            "description" : "This uses Alfresco as it's source of information",
            "operationId" : "getOffenderDocumentListByNomsNumber_2",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/DocumentMeta"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "Returns all offender related documents as a flat list given offenderId",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/documents/{documentId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentByOffenderIdUsingGET_1",
            "parameters" : [
               {
                  "description" : "documentId",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/Resource"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderDocumentByOffenderId",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/documents/{documentId}/detail" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentDetailByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "documentId",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/DocumentMeta"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderDocumentDetailByOffenderId",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/institutionalReports" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderInstitutionalReportsByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/InstitutionalReport"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderInstitutionalReportsByOffenderId",
            "tags" : [
               "Offender institutional Reports"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/institutionalReports/{institutionalReportId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderInstitutionalReportByOffenderIdAndInstitutionalReportIdUsingGET",
            "parameters" : [
               {
                  "description" : "institutionalReportId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "institutionalReportId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/InstitutionalReport"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderInstitutionalReportByOffenderIdAndInstitutionalReportId",
            "tags" : [
               "Offender institutional Reports"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/offences" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderOffencesByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Offence"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderOffencesByOffenderId",
            "tags" : [
               "Offender offences"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/offenderManagers" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderManagerByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/OffenderManager"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderManagerByOffenderId",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/personalCircumstances" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderPersonalCircumstancesByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/PersonalCircumstance"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderPersonalCircumstancesByOffenderId",
            "tags" : [
               "Offender personalCircumstances"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/registrations" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderRegistrationsByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Registration"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderRegistrationsByOffenderId",
            "tags" : [
               "Offender registrations"
            ]
         }
      },
      "/api/offenders/offenderId/{offenderId}/userAccess" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "checkUserAccessByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "User has unrestricted access to offender",
                  "schema" : {
                     "$ref" : "#/definitions/AccessLimitation"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "User is restricted from access to offender",
                  "schema" : {
                     "$ref" : "#/definitions/AccessLimitation"
                  }
               },
               "404" : {
                  "description" : "No such offender, or no such User (see body for detail)"
               }
            },
            "summary" : "checkUserAccessByOffenderId",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/offenders/offenderIds" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderIdsUsingGET",
            "parameters" : [
               {
                  "default" : 1,
                  "description" : "page",
                  "format" : "int32",
                  "in" : "query",
                  "name" : "page",
                  "required" : false,
                  "type" : "integer"
               },
               {
                  "allowEmptyValue" : false,
                  "default" : 1000,
                  "description" : "pageSize",
                  "format" : "int32",
                  "in" : "query",
                  "name" : "pageSize",
                  "required" : false,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderIdsResource"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getOffenderIds",
            "tags" : [
               "Offenders resources"
            ]
         }
      },
      "/api/ping" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "pingUsingGET",
            "produces" : [
               "text/plain"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "string"
                  }
               }
            },
            "summary" : "ping",
            "tags" : [
               "Legacy Health Checks"
            ]
         }
      },
      "/api/probationAreas" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getProbationAreasUsingGET",
            "parameters" : [
               {
                  "description" : "active",
                  "in" : "query",
                  "name" : "active",
                  "required" : false,
                  "type" : "boolean"
               },
               {
                  "collectionFormat" : "multi",
                  "description" : "codes",
                  "in" : "query",
                  "items" : {
                     "type" : "string"
                  },
                  "name" : "codes",
                  "required" : false,
                  "type" : "array"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/ProbationArea"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getProbationAreas",
            "tags" : [
               "Reference data"
            ]
         }
      },
      "/api/probationAreas/code/{code}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getProbationAreasForCodeUsingGET",
            "parameters" : [
               {
                  "description" : "active",
                  "in" : "query",
                  "name" : "active",
                  "required" : false,
                  "type" : "boolean"
               },
               {
                  "description" : "code",
                  "in" : "path",
                  "name" : "code",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Happy path",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/ProbationArea"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "User JWT is missing"
               },
               "403" : {
                  "description" : "User JWT has failed validation"
               },
               "404" : {
                  "description" : "Entity not found"
               }
            },
            "summary" : "getProbationAreasForCode",
            "tags" : [
               "Reference data"
            ]
         }
      },
      "/api/staff/staffCode/{staffCode}/managedOffenders" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getManagedOffendersByStaffCodeUsingGET",
            "parameters" : [
               {
                  "default" : false,
                  "description" : "current",
                  "in" : "query",
                  "name" : "current",
                  "required" : false,
                  "type" : "boolean"
               },
               {
                  "description" : "staffCode",
                  "in" : "path",
                  "name" : "staffCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "A list of managed offenders for a staff officer",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/ManagedOffender"
                     },
                     "type" : "array"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "The requesting user was restricted from access",
                  "schema" : {
                     "$ref" : "#/definitions/AccessLimitation"
                  }
               },
               "404" : {
                  "description" : "The requested staffCode was not found"
               }
            },
            "summary" : "getManagedOffendersByStaffCode",
            "tags" : [
               "Staff"
            ]
         }
      },
      "/health" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "handleUsingGET_1",
            "parameters" : [
               {
                  "description" : "body",
                  "in" : "body",
                  "name" : "body",
                  "required" : false,
                  "schema" : {
                     "additionalProperties" : {
                        "type" : "string"
                     },
                     "type" : "object"
                  }
               }
            ],
            "produces" : [
               "application/vnd.spring-boot.actuator.v3+json",
               "application/json",
               "application/vnd.spring-boot.actuator.v2+json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "object"
                  }
               }
            },
            "summary" : "handle",
            "tags" : [
               "operation-handler"
            ]
         }
      },
      "/health/**" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "handleUsingGET",
            "parameters" : [
               {
                  "description" : "body",
                  "in" : "body",
                  "name" : "body",
                  "required" : false,
                  "schema" : {
                     "additionalProperties" : {
                        "type" : "string"
                     },
                     "type" : "object"
                  }
               }
            ],
            "produces" : [
               "application/vnd.spring-boot.actuator.v3+json",
               "application/json",
               "application/vnd.spring-boot.actuator.v2+json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "object"
                  }
               }
            },
            "summary" : "handle",
            "tags" : [
               "operation-handler"
            ]
         }
      },
      "/info" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "handleUsingGET_2",
            "parameters" : [
               {
                  "description" : "body",
                  "in" : "body",
                  "name" : "body",
                  "required" : false,
                  "schema" : {
                     "additionalProperties" : {
                        "type" : "string"
                     },
                     "type" : "object"
                  }
               }
            ],
            "produces" : [
               "application/vnd.spring-boot.actuator.v3+json",
               "application/json",
               "application/vnd.spring-boot.actuator.v2+json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "object"
                  }
               }
            },
            "summary" : "handle",
            "tags" : [
               "operation-handler"
            ]
         }
      },
      "/ping" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "handleUsingGET_3",
            "parameters" : [
               {
                  "description" : "body",
                  "in" : "body",
                  "name" : "body",
                  "required" : false,
                  "schema" : {
                     "additionalProperties" : {
                        "type" : "string"
                     },
                     "type" : "object"
                  }
               }
            ],
            "produces" : [
               "text/plain"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "object"
                  }
               }
            },
            "summary" : "handle",
            "tags" : [
               "operation-handler"
            ]
         }
      },
      "/secure/authenticate" : {
         "post" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "authenticateUsingPOST",
            "parameters" : [
               {
                  "description" : "Authentication Details",
                  "in" : "body",
                  "name" : "authUser",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/AuthUser"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK"
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Authenticate a username and password against Delius Identity (LDAP)",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/secure/nomisCaseNotes/{nomisId}/{caseNotesId}" : {
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "upsertCaseNotesToDeliusUsingPUT",
            "parameters" : [
               {
                  "description" : "caseNote",
                  "in" : "body",
                  "name" : "caseNote",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "description" : "caseNotesId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "caseNotesId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "nomisId",
                  "in" : "path",
                  "name" : "nomisId",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "type" : "string"
                  }
               },
               "201" : {
                  "description" : "Created",
                  "schema" : {
                     "type" : "string"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Adds case note to delius",
            "tags" : [
               "case notes"
            ]
         }
      },
      "/secure/offenderDeltaIds" : {
         "delete" : {
            "deprecated" : false,
            "operationId" : "deleteOffenderDeltasUsingDELETE_1",
            "parameters" : [
               {
                  "allowEmptyValue" : false,
                  "description" : "Delete records before the date time provided",
                  "format" : "date-time",
                  "in" : "query",
                  "name" : "before",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "2019-03-02T16:45:00.000Z"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK"
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Deletes delta data before the date supplied",
            "tags" : [
               "Offender Events (Secure)"
            ]
         },
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDeltasUsingGET_1",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/OffenderDelta"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns a list of offender IDs which have be inserted/updated or deleted",
            "tags" : [
               "Offender Events (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderSummaryByCrnUsingGET_1",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The offender summary",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetailSummary"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "The offender not found"
               }
            },
            "summary" : "Returns the offender summary for the given crn",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/all" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDetailByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The offender details",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetail"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "The offender is not found"
               }
            },
            "summary" : "Returns the full offender detail for the given crn",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/convictions" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getConvictionsForOffenderByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "CRN for the offender",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "A123456"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Conviction"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "The offender is not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the convictions (AKA Delius Event) for an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/convictions/{convictionId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getConvictionForOffenderByCrnAndConvictionIdUsingGET",
            "parameters" : [
               {
                  "description" : "ID for the conviction / event",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "convictionId",
                  "required" : true,
                  "type" : "integer",
                  "x-example" : 2500295345
               },
               {
                  "description" : "CRN for the offender",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "A123456"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/Conviction"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "The offender CRN or conviction ID is not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the conviction (AKA Delius Event) for a conviction ID and a CRN",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/convictions/{convictionId}/attendances" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getAttendancesUsingGET",
            "parameters" : [
               {
                  "description" : "convictionId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "convictionId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Attendance"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the attendances for a CRN and a conviction id where enforcement is flagged",
            "tags" : [
               "Attendance resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/convictions/{convictionId}/nsis" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getNsiForOffenderByCrnAndConvictionIdUsingGET",
            "parameters" : [
               {
                  "description" : "ID for the conviction / event",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "convictionId",
                  "required" : true,
                  "type" : "integer",
                  "x-example" : 2500295345
               },
               {
                  "description" : "CRN for the offender",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "A123456"
               },
               {
                  "allowEmptyValue" : false,
                  "collectionFormat" : "multi",
                  "description" : "list of NSI codes to constrain by",
                  "in" : "query",
                  "items" : {
                     "type" : "string"
                  },
                  "name" : "nsiCodes",
                  "required" : true,
                  "type" : "array"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/NsiWrapper"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "The offender CRN is not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the NSIs for a conviction ID and a CRN, filtering by NSI codes",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/convictions/{convictionId}/nsis/{nsiId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getNsiByNsiIdUsingGET",
            "parameters" : [
               {
                  "description" : "ID for the conviction / event",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "convictionId",
                  "required" : true,
                  "type" : "integer",
                  "x-example" : 2500295345
               },
               {
                  "description" : "CRN for the offender",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "A123456"
               },
               {
                  "description" : "ID for the nsi",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "nsiId",
                  "required" : true,
                  "type" : "integer",
                  "x-example" : 2500295123
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/Nsi"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "The offender CRN is not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return an NSI by crn, convictionId and nsiId",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/convictions/{convictionId}/requirements" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getRequirementsByConvictionIdUsingGET",
            "parameters" : [
               {
                  "description" : "convictionId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "convictionId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/ConvictionRequirements"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns the requirements for a conviction",
            "tags" : [
               "Requirements resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/custody/keyDates" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getAllCustodyKeyDateByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody key dates",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CustodyKeyDate"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "The the offender does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Gets a all custody key dates for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/custody/keyDates/{typeCode}" : {
         "delete" : {
            "deprecated" : false,
            "operationId" : "deleteCustodyKeyDateByCrnUsingDELETE",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Key date has been deleted"
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be deleted from an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Deletes the custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         },
         "get" : {
            "deprecated" : false,
            "operationId" : "getCustodyKeyDateByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody key date",
                  "schema" : {
                     "$ref" : "#/definitions/CustodyKeyDate"
                  }
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be retrieved for an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found or does not have the supplied key date type."
               }
            },
            "summary" : "Gets a custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         },
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "putCustodyKeyDateByCrnUsingPUT",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "custodyKeyDate",
                  "in" : "body",
                  "name" : "custodyKeyDate",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/CreateCustodyKeyDate"
                  }
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The new or updated custody key date",
                  "schema" : {
                     "$ref" : "#/definitions/CustodyKeyDate"
                  }
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be added to an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Adds or replaces a custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/documents/grouped" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentsByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "CRN for the offender",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "X340906"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDocuments"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not Found. For example if the CRN is not known.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns all documents' meta data for an offender by CRN",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/documents/{documentId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentByCrnUsingGET_1",
            "parameters" : [
               {
                  "description" : "CRN for the offender",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               },
               {
                  "description" : "Document Id",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "12312322"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/Resource"
                  }
               }
            },
            "summary" : "Returns the document contents meta data for a given document associated with an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/identifiers" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderIdentifiersByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderIdentifiers"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the identifiers for an offender using the crn",
            "tags" : [
               "Offender identifiers resource (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/nomsNumber" : {
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "updateOffenderNomsNumberUsingPUT",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "updateOffenderNomsNumber",
                  "in" : "body",
                  "name" : "updateOffenderNomsNumber",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/UpdateOffenderNomsNumber"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The offender record was updated",
                  "schema" : {
                     "$ref" : "#/definitions/IDs"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found"
               }
            },
            "summary" : "Updates the offender record with the NOMS number in UpdateOffenderNomsNumber",
            "tags" : [
               "Custody resource"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/personalCircumstances" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderPersonalCircumstancesByCrnUsingGET_1",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/PersonalCircumstances"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the personal circumstances for an offender using crn",
            "tags" : [
               "Offender personal circumstance resource (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/registrations" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderRegistrationsByCrnUsingGET_1",
            "parameters" : [
               {
                  "description" : "crn",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/Registrations"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the registrations for an offender using the crn",
            "tags" : [
               "Offender registrations resource (Secure)"
            ]
         }
      },
      "/secure/offenders/crn/{crn}/release" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts an offender CRN in the format A999999",
            "operationId" : "getLatestRecallAndReleaseForOffenderByCrnUsingGET",
            "parameters" : [
               {
                  "description" : "CRN for the offender",
                  "in" : "path",
                  "name" : "crn",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "X320741"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderLatestRecall"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns the latest recall and release details for an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDetailsUsingGET",
            "parameters" : [
               {
                  "description" : "Nomis number for the offender",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetailSummary"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the details for an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/all" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDetailByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The offender details",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDetail"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "The offender is not found"
               }
            },
            "summary" : "Returns the full offender detail for the given nomsNumber",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/allOffenderManagers" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts a NOMIS offender nomsNumber in the format A9999AA",
            "operationId" : "getAllOffenderManagersForOffenderUsingGET",
            "parameters" : [
               {
                  "description" : "Nomis number for the offender",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CommunityOrPrisonOffenderManager"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns the current community and prison offender managers for an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/bookingNumber/{bookingNumber}/custody/keyDates" : {
         "post" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "replaceAllCustodyKeyDateByNomsNumberAndBookingNumberUsingPOST",
            "parameters" : [
               {
                  "description" : "bookingNumber",
                  "in" : "path",
                  "name" : "bookingNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "replaceCustodyKeyDates",
                  "in" : "body",
                  "name" : "replaceCustodyKeyDates",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/ReplaceCustodyKeyDates"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The new or updated custody key dates",
                  "schema" : {
                     "$ref" : "#/definitions/Custody"
                  }
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender or conviction was not found."
               }
            },
            "summary" : "Replaces all key dates specified in body. Key dates are either added or replaced or deleted if absent (see ReplaceCustodyKeyDates for the list). The the custodial conviction must be active",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/contacts" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderContactReportByNomsNumberUsingGET_1",
            "parameters" : [
               {
                  "collectionFormat" : "multi",
                  "description" : "contactTypes",
                  "in" : "query",
                  "items" : {
                     "type" : "string"
                  },
                  "name" : "contactTypes",
                  "required" : false,
                  "type" : "array"
               },
               {
                  "description" : "from",
                  "in" : "query",
                  "name" : "from",
                  "required" : false,
                  "type" : "string"
               },
               {
                  "description" : "Nomis number for the offender",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               },
               {
                  "description" : "to",
                  "in" : "query",
                  "name" : "to",
                  "required" : false,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Contact"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns the contact details for an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/convictions" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getConvictionsForOffenderUsingGET",
            "parameters" : [
               {
                  "description" : "Nomis number for the offender",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/Conviction"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the convictions (AKA Delius Event) for an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/custody/bookingNumber" : {
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "updateCustodyBookingNumberUsingPUT",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "updateCustodyBookingNumber",
                  "in" : "body",
                  "name" : "updateCustodyBookingNumber",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/UpdateCustodyBookingNumber"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody record was updated",
                  "schema" : {
                     "$ref" : "#/definitions/Custody"
                  }
               },
               "400" : {
                  "description" : "The booking number custody request is invalid"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "Either the requested offender was not found or the conviction associated the sentence start date"
               }
            },
            "summary" : "Updates the associated custody record with booking number in UpdateCustodyBookingNumber",
            "tags" : [
               "Custody resource"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/custody/bookingNumber/{bookingNumber}" : {
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "updateCustodyUsingPUT",
            "parameters" : [
               {
                  "description" : "bookingNumber",
                  "in" : "path",
                  "name" : "bookingNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "updateCustody",
                  "in" : "body",
                  "name" : "updateCustody",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/UpdateCustody"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody record was updated",
                  "schema" : {
                     "$ref" : "#/definitions/Custody"
                  }
               },
               "400" : {
                  "description" : "The custody request is invalid"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "Either the requested offender was not found or the conviction associated the booking number."
               }
            },
            "summary" : "Updates the associated custody record with changes defined in UpdateCustody",
            "tags" : [
               "Custody resource"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/custody/keyDates" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getAllCustodyKeyDateByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody key dates",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CustodyKeyDate"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "The the offender does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Gets a all custody key dates for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/custody/keyDates/{typeCode}" : {
         "delete" : {
            "deprecated" : false,
            "operationId" : "deleteCustodyKeyDateByNomsNumberUsingDELETE",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Key date has been deleted"
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be deleted from an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Deletes the custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         },
         "get" : {
            "deprecated" : false,
            "operationId" : "getCustodyKeyDateByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody key date",
                  "schema" : {
                     "$ref" : "#/definitions/CustodyKeyDate"
                  }
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be retrieved for an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found or does not have the supplied key date type."
               }
            },
            "summary" : "Gets a custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         },
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "putCustodyKeyDateByNomsNumberUsingPUT",
            "parameters" : [
               {
                  "description" : "custodyKeyDate",
                  "in" : "body",
                  "name" : "custodyKeyDate",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/CreateCustodyKeyDate"
                  }
               },
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The new or updated custody key date",
                  "schema" : {
                     "$ref" : "#/definitions/CustodyKeyDate"
                  }
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be added to an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Adds or replaces a custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/documents/grouped" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentsUsingGET",
            "parameters" : [
               {
                  "description" : "Nomis number for the offender",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderDocuments"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns all document's meta data for an offender by NOMS number",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/documents/{documentId}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderDocumentUsingGET",
            "parameters" : [
               {
                  "description" : "Document Id",
                  "in" : "path",
                  "name" : "documentId",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "12312322"
               },
               {
                  "description" : "Nomis number for the offender",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/Resource"
                  }
               }
            },
            "summary" : "Returns the document contents meta data for a given document associated with an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/identifiers" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderIdentifiersByNomsNumberUsingGET",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderIdentifiers"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the identifiers for an offender using NOMS number",
            "tags" : [
               "Offender identifiers resource (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/personalCircumstances" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderPersonalCircumstancesByNomsNumberUsingGET_1",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/PersonalCircumstances"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the personal circumstances for an offender using noms number",
            "tags" : [
               "Offender personal circumstance resource (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/prisonOffenderManager" : {
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "allocatePrisonOffenderManagerByNomsNumberUsingPUT",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "prisonOffenderManager",
                  "in" : "body",
                  "name" : "prisonOffenderManager",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/CreatePrisonOffenderManager"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The new prison offender manager",
                  "schema" : {
                     "$ref" : "#/definitions/CommunityOrPrisonOffenderManager"
                  }
               },
               "400" : {
                  "description" : "Staff code does belong to the probation area related prison institution"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The offender or prison institution is not found"
               }
            },
            "summary" : "Allocates the prison offender manager for an offender in custody. This operation may also have a side affect of creating a Staff member if one matching the name does not already exist. An existing staff member can be used if the staff code is supplied.",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/registrations" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderRegistrationsByNomsNumberUsingGET_1",
            "parameters" : [
               {
                  "description" : "nomsNumber",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/Registrations"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the registrations for an offender using NOMS number",
            "tags" : [
               "Offender registrations resource (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/release" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts a NOMIS offender nomsNumber in the format A9999AA",
            "operationId" : "getLatestRecallAndReleaseForOffenderUsingGET",
            "parameters" : [
               {
                  "description" : "Nomis number for the offender",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderLatestRecall"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns the latest recall and release details for an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{nomsNumber}/responsibleOfficers" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts a NOMIS offender nomsNumber in the format A9999AA",
            "operationId" : "getResponsibleOfficersForOffenderUsingGET",
            "parameters" : [
               {
                  "allowEmptyValue" : false,
                  "default" : false,
                  "description" : "Current only",
                  "in" : "query",
                  "name" : "current",
                  "required" : false,
                  "type" : "boolean",
                  "x-example" : false
               },
               {
                  "description" : "Nomis number for the offender",
                  "in" : "path",
                  "name" : "nomsNumber",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "G9542VP"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/ResponsibleOfficer"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the responsible officer (RO) for an offender",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/nomsNumber/{originalNomsNumber}/nomsNumber" : {
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "description" : "In the very rare circumstances more than one offender is found with matching noms number, all will be updated and their identifiers returned.",
            "operationId" : "replaceOffenderNomsNumberUsingPUT",
            "parameters" : [
               {
                  "description" : "originalNomsNumber",
                  "in" : "path",
                  "name" : "originalNomsNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "updateOffenderNomsNumber",
                  "in" : "body",
                  "name" : "updateOffenderNomsNumber",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/UpdateOffenderNomsNumber"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/IDs"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "The new noms number is not present in request"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "403" : {
                  "description" : "Missing required role for this operation"
               },
               "404" : {
                  "description" : "The requested offender was not found"
               },
               "409" : {
                  "description" : "The new noms number is assigned to an existing offender already"
               }
            },
            "summary" : "Updates the offender record(s) with the new NOMS number in UpdateOffenderNomsNumber replacing the existing number.",
            "tags" : [
               "Custody resource"
            ]
         }
      },
      "/secure/offenders/offenderId/{offenderId}/custody/keyDates" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getAllCustodyKeyDateByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody key dates",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CustodyKeyDate"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "The the offender does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Gets a all custody key dates for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/offenders/offenderId/{offenderId}/custody/keyDates/{typeCode}" : {
         "delete" : {
            "deprecated" : false,
            "operationId" : "deleteCustodyKeyDateByOffenderIdUsingDELETE",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Key date has been deleted"
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be deleted from an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Deletes the custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         },
         "get" : {
            "deprecated" : false,
            "operationId" : "getCustodyKeyDateByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody key date",
                  "schema" : {
                     "$ref" : "#/definitions/CustodyKeyDate"
                  }
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be retrieved for an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found or does not have the supplied key date type."
               }
            },
            "summary" : "Gets a custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         },
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "putCustodyKeyDateByOffenderIdUsingPUT",
            "parameters" : [
               {
                  "description" : "custodyKeyDate",
                  "in" : "body",
                  "name" : "custodyKeyDate",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/CreateCustodyKeyDate"
                  }
               },
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The new or updated custody key date",
                  "schema" : {
                     "$ref" : "#/definitions/CustodyKeyDate"
                  }
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be added to an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Adds or replaces a custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/offenders/offenderId/{offenderId}/identifiers" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderIdentifiersByOffenderIdUsingGET",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/OffenderIdentifiers"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the identifiers for an offender using offenderId",
            "tags" : [
               "Offender identifiers resource (Secure)"
            ]
         }
      },
      "/secure/offenders/offenderId/{offenderId}/personalCircumstances" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderPersonalCircumstancesByOffenderIdUsingGET_1",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/PersonalCircumstances"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the personal circumstances for an offender using offenderId",
            "tags" : [
               "Offender personal circumstance resource (Secure)"
            ]
         }
      },
      "/secure/offenders/offenderId/{offenderId}/registrations" : {
         "get" : {
            "deprecated" : false,
            "description" : "requires ROLE_COMMUNITY",
            "operationId" : "getOffenderRegistrationsByOffenderIdUsingGET_1",
            "parameters" : [
               {
                  "description" : "offenderId",
                  "format" : "int64",
                  "in" : "path",
                  "name" : "offenderId",
                  "required" : true,
                  "type" : "integer"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/Registrations"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Offender not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the registrations for an offender using offenderId",
            "tags" : [
               "Offender registrations resource (Secure)"
            ]
         }
      },
      "/secure/offenders/primaryIdentifiers" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getOffenderIdsUsingGET_1",
            "parameters" : [
               {
                  "description" : "Filter by offenders that were active on the supplied date. Advised not to use this in conjunction with includeActiveOnly since that will effectively return offenders active of this supplied date and current date which is typically not what is required.",
                  "format" : "date",
                  "in" : "query",
                  "name" : "activeDate",
                  "required" : false,
                  "type" : "string",
                  "x-example" : "2017-10-31"
               },
               {
                  "description" : "Filter by offenders that are active, i.e. offenders on a sentence that probation has an interest in.",
                  "in" : "query",
                  "name" : "includeActiveOnly",
                  "required" : false,
                  "type" : "boolean",
                  "x-example" : true
               },
               {
                  "description" : "Include deleted offenders",
                  "in" : "query",
                  "name" : "includeDeleted",
                  "required" : false,
                  "type" : "boolean",
                  "x-example" : true
               },
               {
                  "format" : "int64",
                  "in" : "query",
                  "name" : "offset",
                  "required" : false,
                  "type" : "integer"
               },
               {
                  "default" : 0,
                  "description" : "Results page you want to retrieve (0..N)",
                  "format" : "int32",
                  "in" : "query",
                  "name" : "page",
                  "required" : false,
                  "type" : "integer",
                  "x-example" : 0
               },
               {
                  "format" : "int32",
                  "in" : "query",
                  "name" : "pageNumber",
                  "required" : false,
                  "type" : "integer"
               },
               {
                  "format" : "int32",
                  "in" : "query",
                  "name" : "pageSize",
                  "required" : false,
                  "type" : "integer"
               },
               {
                  "in" : "query",
                  "name" : "paged",
                  "required" : false,
                  "type" : "boolean"
               },
               {
                  "default" : 10,
                  "description" : "Number of records per page.",
                  "format" : "int32",
                  "in" : "query",
                  "name" : "size",
                  "required" : false,
                  "type" : "integer",
                  "x-example" : 10
               },
               {
                  "default" : "crn,asc",
                  "description" : "Sort column and direction. Multiple sort params allowed.",
                  "in" : "query",
                  "name" : "sort",
                  "required" : false,
                  "type" : "string",
                  "x-example" : "crn,desc"
               },
               {
                  "in" : "query",
                  "name" : "sort.sorted",
                  "required" : false,
                  "type" : "boolean"
               },
               {
                  "in" : "query",
                  "name" : "sort.unsorted",
                  "required" : false,
                  "type" : "boolean"
               },
               {
                  "in" : "query",
                  "name" : "unpaged",
                  "required" : false,
                  "type" : "boolean"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/PageOfPrimaryIdentifiers"
                  }
               }
            },
            "summary" : "Return pageable list of all offender identifiers that match the supplied filter",
            "tags" : [
               "Offender resources (Secure)"
            ]
         }
      },
      "/secure/offenders/prisonBookingNumber/{prisonBookingNumber}/custody/keyDates" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getAllCustodyKeyDateByPrisonBookingNumberUsingGET",
            "parameters" : [
               {
                  "description" : "prisonBookingNumber",
                  "in" : "path",
                  "name" : "prisonBookingNumber",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody key dates",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/CustodyKeyDate"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "The the offender does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found."
               }
            },
            "summary" : "Gets a all custody key dates for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/offenders/prisonBookingNumber/{prisonBookingNumber}/custody/keyDates/{typeCode}" : {
         "delete" : {
            "deprecated" : false,
            "operationId" : "deleteCustodyKeyDateByPrisonBookingNumberUsingDELETE",
            "parameters" : [
               {
                  "description" : "prisonBookingNumber",
                  "in" : "path",
                  "name" : "prisonBookingNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Key date has been deleted"
               },
               "400" : {
                  "description" : "The keyDate is not valid"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested prison booking was not found."
               }
            },
            "summary" : "Deletes the custody key date for the associated custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         },
         "get" : {
            "deprecated" : false,
            "operationId" : "getCustodyKeyDateByPrisonBookingNumberUsingGET",
            "parameters" : [
               {
                  "description" : "prisonBookingNumber",
                  "in" : "path",
                  "name" : "prisonBookingNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The custody key date",
                  "schema" : {
                     "$ref" : "#/definitions/CustodyKeyDate"
                  }
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be retrieved for an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested offender was not found or does not have the supplied key date type."
               }
            },
            "summary" : "Gets a custody key date for the related custodial conviction with the matching prison booking",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         },
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "putCustodyKeyDateByPrisonBookingNumberUsingPUT",
            "parameters" : [
               {
                  "description" : "custodyKeyDate",
                  "in" : "body",
                  "name" : "custodyKeyDate",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/CreateCustodyKeyDate"
                  }
               },
               {
                  "description" : "prisonBookingNumber",
                  "in" : "path",
                  "name" : "prisonBookingNumber",
                  "required" : true,
                  "type" : "string"
               },
               {
                  "description" : "typeCode",
                  "in" : "path",
                  "name" : "typeCode",
                  "required" : true,
                  "type" : "string"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "The new or updated custody key date",
                  "schema" : {
                     "$ref" : "#/definitions/CustodyKeyDate"
                  }
               },
               "400" : {
                  "description" : "The keyDate is not valid or a key date can not be added to an offender which does not have a single custody event"
               },
               "401" : {
                  "description" : "Request is missing Authorization header (no JWT)"
               },
               "404" : {
                  "description" : "The requested conviction with associated prison booking was not found."
               }
            },
            "summary" : "Adds or replaces a custody key date for the active custodial conviction",
            "tags" : [
               "OMiC",
               "Offender custody key dates"
            ]
         }
      },
      "/secure/probationAreas" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts filtering to only return active areas",
            "operationId" : "getProbationAreaCodesUsingGET",
            "parameters" : [
               {
                  "allowEmptyValue" : false,
                  "description" : "Restricts to active areas only",
                  "in" : "query",
                  "name" : "active",
                  "required" : false,
                  "type" : "boolean",
                  "x-example" : true
               },
               {
                  "allowEmptyValue" : false,
                  "description" : "Restricts to areas that are providers, no prisons will be returned",
                  "in" : "query",
                  "name" : "excludeEstablishments",
                  "required" : false,
                  "type" : "boolean",
                  "x-example" : true
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/PageOfKeyValue"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return probation areas",
            "tags" : [
               "Reference Data API (Secure)"
            ]
         }
      },
      "/secure/probationAreas/code/{code}/localDeliveryUnits" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts a probation area code",
            "operationId" : "getLdusForProbationCodeUsingGET",
            "parameters" : [
               {
                  "description" : "Probation area code",
                  "in" : "path",
                  "name" : "code",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "NO2"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/PageOfKeyValue"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return Local delivery units for a probation area",
            "tags" : [
               "Reference Data API (Secure)"
            ]
         }
      },
      "/secure/probationAreas/code/{code}/localDeliveryUnits/code/{lduCode}/teams" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts a probation area code and local delivery unit code",
            "operationId" : "getTeamsForLduUsingGET",
            "parameters" : [
               {
                  "description" : "Probation area code",
                  "in" : "path",
                  "name" : "code",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "NO2"
               },
               {
                  "description" : "Local delivery unit code",
                  "in" : "path",
                  "name" : "lduCode",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "NO2NPSA"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/PageOfKeyValue"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return teams for a local delivery unit within a probation area",
            "tags" : [
               "Reference Data API (Secure)"
            ]
         }
      },
      "/secure/referenceData/set/{set}" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getReferenceDataUsingGET",
            "parameters" : [
               {
                  "description" : "The set of reference data",
                  "in" : "path",
                  "name" : "set",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "ADDITIONAL IDENTIFIER TYPE"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/ReferenceDataList"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Data set not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return the reference data items for the given set",
            "tags" : [
               "Reference Data API (Secure)"
            ]
         }
      },
      "/secure/referenceData/sets" : {
         "get" : {
            "deprecated" : false,
            "description" : "It is expected that this API will be used to assist developers in understanding the available set codes available for /secure/referenceData/set/{set} endpoint",
            "operationId" : "getReferenceDataSetsUsingGET",
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/ReferenceDataSets"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns all available reference data sets",
            "tags" : [
               "Reference Data API (Secure)"
            ]
         }
      },
      "/secure/staff/list" : {
         "post" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "description" : "staff details for supplied usernames",
            "operationId" : "getStaffDetailsList",
            "parameters" : [
               {
                  "description" : "usernames",
                  "in" : "body",
                  "name" : "usernames",
                  "required" : true,
                  "schema" : {
                     "items" : {
                        "type" : "string"
                     },
                     "type" : "array"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/StaffDetails"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns a list of staff details for supplied usernames - POST version to allow large user lists.",
            "tags" : [
               "Staff (Secure)"
            ]
         }
      },
      "/secure/staff/staffCode/{staffCode}" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts a Delius staff officer code",
            "operationId" : "getStaffDetailsUsingGET",
            "parameters" : [
               {
                  "description" : "Delius officer code",
                  "in" : "path",
                  "name" : "staffCode",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "SH0001"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/StaffDetails"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return details of a staff member including option user details",
            "tags" : [
               "Staff (Secure)"
            ]
         }
      },
      "/secure/staff/staffCode/{staffCode}/managedOffenders" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts a Delius staff officer code",
            "operationId" : "getOffendersForResponsibleOfficerUsingGET",
            "parameters" : [
               {
                  "allowEmptyValue" : false,
                  "default" : false,
                  "description" : "Current only",
                  "in" : "query",
                  "name" : "current",
                  "required" : false,
                  "type" : "boolean",
                  "x-example" : false
               },
               {
                  "description" : "Delius officer code of the responsible officer",
                  "in" : "path",
                  "name" : "staffCode",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "SH0001"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/ManagedOffender"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return list of of currently managed offenders for one responsible officer (RO)",
            "tags" : [
               "Staff (Secure)"
            ]
         }
      },
      "/secure/staff/username/{username}" : {
         "get" : {
            "deprecated" : false,
            "description" : "Accepts a Delius staff username",
            "operationId" : "getStaffDetailsForUsernameUsingGET",
            "parameters" : [
               {
                  "description" : "Delius username",
                  "in" : "path",
                  "name" : "username",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "SheliaHancockNPS"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/StaffDetails"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Return details of a staff member including user details",
            "tags" : [
               "Staff (Secure)"
            ]
         }
      },
      "/secure/users/list/detail" : {
         "post" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "description" : "user details for supplied usernames",
            "operationId" : "getUserDetailsList",
            "parameters" : [
               {
                  "description" : "usernames",
                  "in" : "body",
                  "name" : "usernames",
                  "required" : true,
                  "schema" : {
                     "items" : {
                        "type" : "string"
                     },
                     "type" : "array"
                  }
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/UserDetailsWrapper"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns a list of user details for supplied usernames - POST version to allow large user lists.",
            "tags" : [
               "User API"
            ]
         }
      },
      "/secure/users/search/email/{email}/details" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "findUserByEmailUsingGET",
            "parameters" : [
               {
                  "description" : "LDAP email address",
                  "in" : "path",
                  "name" : "email",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "sheila.hancock@justice.gov.uk"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                        "$ref" : "#/definitions/UserDetails"
                     },
                     "type" : "array"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Find user details of a user held in Delius Identity (LDAP)",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/secure/users/{username}/areas" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "getUserAreas",
            "parameters" : [
               {
                  "description" : "username",
                  "in" : "path",
                  "name" : "username",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "johnsmithnps"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/UserAreas"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "403" : {
                  "description" : "Forbidden",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "User with username not found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "500" : {
                  "description" : "Unrecoverable error whilst processing request.",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Returns a list of areas a user is related to including their home area",
            "tags" : [
               "User API"
            ]
         }
      },
      "/secure/users/{username}/details" : {
         "get" : {
            "deprecated" : false,
            "operationId" : "findUserUsingGET",
            "parameters" : [
               {
                  "description" : "LDAP username",
                  "in" : "path",
                  "name" : "username",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "TESTUSERNPS"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "$ref" : "#/definitions/UserDetails"
                  }
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not Found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Find user details of a user held in Delius Identity (LDAP)",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/secure/users/{username}/password" : {
         "post" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "changePasswordUsingPOST",
            "parameters" : [
               {
                  "description" : "Password Credentials",
                  "in" : "body",
                  "name" : "authPassword",
                  "required" : true,
                  "schema" : {
                     "$ref" : "#/definitions/AuthPassword"
                  }
               },
               {
                  "description" : "LDAP username",
                  "in" : "path",
                  "name" : "username",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "TESTUSERNPS"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "Password Changed"
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not Found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Change password a users (LDAP) account",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/secure/users/{username}/roles/{roleId}" : {
         "put" : {
            "consumes" : [
               "application/json"
            ],
            "deprecated" : false,
            "operationId" : "addRoleUsingPUT",
            "parameters" : [
               {
                  "description" : "Delius Role ID",
                  "in" : "path",
                  "name" : "roleId",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "CWBT001"
               },
               {
                  "description" : "LDAP username",
                  "in" : "path",
                  "name" : "username",
                  "required" : true,
                  "type" : "string",
                  "x-example" : "TESTUSERNPS"
               }
            ],
            "produces" : [
               "application/json"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK"
               },
               "400" : {
                  "description" : "Invalid request",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "401" : {
                  "description" : "Unauthorised",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               },
               "404" : {
                  "description" : "Not Found",
                  "schema" : {
                     "$ref" : "#/definitions/ErrorResponse"
                  }
               }
            },
            "summary" : "Add a role to a user held in Delius Identity (LDAP)",
            "tags" : [
               "Authentication"
            ]
         }
      }
   },
   "swagger" : "2.0",
   "tags" : [
      {
         "description" : "Attendance Resource",
         "name" : "Attendance resources (Secure)"
      },
      {
         "description" : "Authentication Controller",
         "name" : "Authentication"
      },
      {
         "description" : "Custody Resource",
         "name" : "Custody resource"
      },
      {
         "description" : "Please use /health, /info, /pong in base path",
         "name" : "Legacy Health Checks"
      },
      {
         "description" : "Obtain JWT token",
         "name" : "Logon as user"
      },
      {
         "description" : "Custody Key Dates Controller",
         "name" : "OMiC"
      },
      {
         "description" : "Offender appointment resources",
         "name" : "Offender Appointments"
      },
      {
         "description" : "Offender contact resources",
         "name" : "Offender Contacts"
      },
      {
         "description" : "Offender court appearance resources",
         "name" : "Offender Court Appearances"
      },
      {
         "description" : "Offender court report resources",
         "name" : "Offender Court Reports"
      },
      {
         "description" : "Offender document resources",
         "name" : "Offender Documents"
      },
      {
         "description" : "Offender Delta Controller Secure",
         "name" : "Offender Events (Secure)"
      },
      {
         "description" : "Offender conviction resources",
         "name" : "Offender convictions"
      },
      {
         "description" : "Custody Key Dates Controller",
         "name" : "Offender custody key dates"
      },
      {
         "description" : "Offender Delta Controller",
         "name" : "Offender deltas"
      },
      {
         "description" : "Offender Identifiers Resource",
         "name" : "Offender identifiers resource (Secure)"
      },
      {
         "description" : "Offender institutional report resources",
         "name" : "Offender institutional Reports"
      },
      {
         "description" : "Offender offence resources",
         "name" : "Offender offences"
      },
      {
         "description" : "Personal Circumstance Resource",
         "name" : "Offender personal circumstance resource (Secure)"
      },
      {
         "description" : "Offender personal circumstance resources",
         "name" : "Offender personalCircumstances"
      },
      {
         "description" : "Offender alert registrations resources",
         "name" : "Offender registrations"
      },
      {
         "description" : "Registration Resource",
         "name" : "Offender registrations resource (Secure)"
      },
      {
         "description" : "Offenders Resource",
         "name" : "Offender resources (Secure)"
      },
      {
         "description" : "Offender Controller",
         "name" : "Offenders resources"
      },
      {
         "description" : "Reference Data Resource",
         "name" : "Reference Data API (Secure)"
      },
      {
         "description" : "Reference Data APIs",
         "name" : "Reference data"
      },
      {
         "description" : "Requirements Resource",
         "name" : "Requirements resources (Secure)"
      },
      {
         "description" : "Staff Controller",
         "name" : "Staff"
      },
      {
         "description" : "Staff Resource",
         "name" : "Staff (Secure)"
      },
      {
         "description" : "User Controller",
         "name" : "User API"
      },
      {
         "description" : "Case note resources",
         "name" : "case notes"
      },
      {
         "description" : "Operation Handler",
         "name" : "operation-handler"
      }
   ]
}
